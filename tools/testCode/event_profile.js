// 关于事件的定义

// 关于“事件”， 我们这么定义： 花费{生产时间}+{物品列表}后，在{冷却时间}后产生{事件列表}和{Buff列表}和{物品列表}，在{生产时间后} 表示事件完成！

// 这样以“睡觉8小时”为例：其{生产时间} 为 8小时， 冷却时间为0. {事件列表}，{物品列表}为空， {buff列表}中包含一项{Buff: 随机恢复一定的精力值}
// {Buff的定义}的定义： 在{事件中}或{事件后}，产生{属性列表}
// {属性列表}的定义： 这个就是原子级的了，就像物品列表一样， 只有个 NAME 即可。


// 再以“生产土豆”为例： 其{生产时间} 为30分钟， {冷却时间}为24小时. {事件列表} 中包含另一个{事件：获取土豆}，{Buff列表}和{物品列表}均为空。
// {事件：获取土豆}： 其{生产时间}为10分钟， {冷却时间}为0， {事件列表}与{Buff列表}为空，{物品列表}为{土豆：20}

// 以上{}内的， 是”事件“的配置， ”事件“的属性， 只有一个：开始时间。程序根据 事件的启动时间 及 配置项， 来渲染建筑界面。
// 这里的时间，统统为虚拟时间， 即游戏内时间，单位为 “分钟”

// 生产时间结束后，“事件完成”； 生产时间结束后，冷却时间结束前，这段时间被称为 “事件中”; 冷却事件结束后，被称为“事件后”; 

var HY_EVENTS = {
	// Example
	"5000":{
		P_COST : {},
		P_TIME : 30, 	// 生产时间 
		C_TIME : 1440, 	// 冷却时间
		EVENTS : {"5001":1},
		BUFFS : {}, 
		ITEMS : {}
	},
	
	"5001":{
		P_COST : {},
		P_TIME : 30, 	// 生产时间 
		C_TIME : 0, 	// 冷却时间
		EVENTS : {},
		BUFFS : {}, 
		ITEMS : {"4000" : 16}	// 得到16
	},

};