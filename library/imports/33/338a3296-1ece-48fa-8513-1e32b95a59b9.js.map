{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\component\\page\\login/assets\\scripts\\app\\component\\page\\login\\AccManager.ts"],"names":[],"mappings":";;;;;AACA,wEAAyE;AACzE,mEAA8D;AAC9D,iDAAmD;AAEnD,6DAA+D;AAC/D,mEAA8D;AAC9D,mDAA8C;AAC9C,6CAA6D;AAC7D,uEAAwE;AACxE,uDAAkD;AAClD,kFAAgM;AAEhM,mDAAuD;AAGvD;IAmBE;QARQ,eAAU,GAAW,CAAC,CAAC,CAAC,kBAAkB;QAShD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC;IAC/B,CAAC;IAjBD,sBAAkB,sBAAQ;aAA1B;YACE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACxB,IAAI,CAAC,cAAc,GAAG,IAAI,UAAU,EAAE,CAAC;aACxC;YACD,OAAO,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;;;OAAA;IAcD,sBAAW,+BAAO;aAIlB;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAND,UAAmB,KAAc;YAC/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAAA;IAMM,kCAAa,GAApB,UAAqB,EAAU;QAC7B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,0GAA0G;IAC5G,CAAC;IAED,QAAQ;IACD,oCAAe,GAAtB,UAAuB,IAAI;QACzB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;QAChC,IAAI,uBAAa,CAAC,QAAQ,CAAC,SAAS,EAAE;YACpC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,OAAO;IACA,iCAAY,GAAnB;QACE,qCAAqC;IACvC,CAAC;IAED,4BAA4B;IACrB,iCAAY,GAAnB;QACE,OAAO,CAAC,IAAI,CAAC,YAAY,GAAG,sBAAY,CAAC,QAAQ,CAAC;QAClD,qBAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;IACxC,CAAC;IAED,SAAS;IACF,kCAAa,GAApB,UAAqB,IAAI;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpB,uBAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,6BAAc,EAAG,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACzE,uBAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,6BAAc,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAE3E,IAAM,QAAQ,GAA2B,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChF,uBAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC/F,CAAC;IAED,UAAU;IACH,oCAAe,GAAtB;QACE,qBAAW,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACtC,uBAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,6BAAc,EAAI,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAC5E,uBAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,6BAAc,EAAG,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QAC1E,IAAM,QAAQ,GAA2B,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChF,uBAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACjG,CAAC;IAED,SAAS;IACF,sCAAiB,GAAxB,UAAyB,IAAI;QAC3B,uBAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,6BAAc,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACzE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,WAAW;IACJ,wCAAmB,GAA1B;QACE,uBAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,6BAAc,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAC3E,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,OAAO;IACA,iCAAY,GAAnB;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1C,kFAAkF;QAClF,IAAM,aAAa,GAAW,WAAW,CAAC,YAAY,CAAC;QACvD,IAAM,eAAe,GAAW,WAAW,CAAC,iBAAiB,CAAC;QAC9D,SAAS;QACT,IAAM,QAAQ,GAAG,IAAI,6BAAW,EAAE,CAAC;QACnC,QAAQ,CAAC,QAAQ,GAAU,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC;QAC9D,QAAQ,CAAC,YAAY,GAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC;QACnE,QAAQ,CAAC,aAAa,GAAK,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC;QAC5D,QAAQ,CAAC,aAAa,GAAK,aAAa,CAAC;QACzC,QAAQ,CAAC,eAAe,GAAG,eAAe,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,GAAG,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;QACzG,iBAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC5B,CAAC;IAED,SAAS;IACF,mCAAc,GAArB;QACE,IAAM,UAAU,GAAM,IAAI,+BAAa,EAAE,CAAC;QAC1C,UAAU,CAAC,EAAE,GAAS,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC9C,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC;QAC5D,UAAU,CAAC,MAAM,GAAK,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC;QACxD,iBAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IAED,cAAc;IACP,sCAAiB,GAAxB,UAAyB,GAAgB;QACvC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO;SACR;QAED,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;YAE3B,IAAM,MAAM,GAAG,kBAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACrC,qBAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACnC,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;YAEpC,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,KAAK,KAAK,EAAE;gBAC5C,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aAC9B;YACD,OAAO;SACR;QAED,IAAM,aAAa,GAAa,GAAG,CAAC,aAAa,CAAC,CAAI,cAAc;QACpE,IAAM,aAAa,GAAa,GAAG,CAAC,aAAa,CAAC,CAAI,YAAY;QAClE,IAAM,eAAe,GAAW,GAAG,CAAC,eAAe,CAAC,CAAE,kBAAkB;QACxE,IAAM,cAAc,GAAY,GAAG,CAAC,YAAY,CAAC,CAAK,aAAa;QAEnE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,GAAQ,aAAa,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC;QACvD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,GAAM,cAAc,CAAC;QACvD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,GAAO,aAAa,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,GAAG,eAAe,CAAC;QACxD,gBAAgB;QAChB,MAAM,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,aAAa,CAAC;QAClD,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAM,QAAQ,GAAW,GAAG,CAAC,EAAE,CAAC;QAChC,2CAA2C;QAC3C,IAAI,QAAQ,GAAG,CAAC,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACnC,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QAED,YAAY;QACZ,qBAAW,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;IAC7C,CAAC;IAGD,YAAY;IACL,wCAAmB,GAA1B,UAA2B,GAAkB;QAC3C,qBAAW,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;QACrC,QAAQ;QACR,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACZ,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,qBAAW,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;SACnC;IACH,CAAC;IAGD,YAAY;IACL,uCAAkB,GAAzB,UAA0B,GAAiB;QACzC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO;SACR;QACD,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE;YAChB,IAAM,MAAM,GAAI,6BAAc,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC;YAClE,qBAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACnC,OAAO;SACR;QACD,IAAM,QAAQ,GAAW,GAAG,CAAC,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACnC,OAAO;QACP,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,gBAAgB;IACT,sCAAiB,GAAxB,UAAyB,GAAgB;QACvC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO;SACR;QACD,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE;YAChB,eAAe;YACf,qBAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,GAAI,GAAG,CAAC,IAAI,CAAC,CAAC;YACnD,OAAO;SACR;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,WAAW;IACJ,oCAAe,GAAtB;QACE,IAAM,QAAQ,GAAgB,IAAI,6BAAW,EAAE,CAAC;QAChD,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QACtC,iBAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC5B,CAAC;IAED,kCAAkC;IAC3B,uCAAkB,GAAzB;QACE,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,EAAE;YACvC,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;SAClC;IACH,CAAC;IAGD,WAAW;IACJ,uCAAkB,GAAzB;QACE,IAAM,SAAS,GAAiB,IAAI,8BAAY,EAAE,CAAC;QACnD,iBAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC;IAED,sBAAW,kCAAU;aAArB;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aACD,UAAsB,KAAa;YACjC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAHA;IAKD,UAAU;IACH,sCAAiB,GAAxB;QACE,IAAI,uBAAa,CAAC,QAAQ,CAAC,SAAS,EAAE;YACpC,IAAM,aAAa,GAAG,IAAI,kCAAgB,EAAE,CAAC;YAC7C,iBAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAChC;IACH,CAAC;IAED,gBAAgB;IACT,0CAAqB,GAA5B;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1C,IAAM,UAAU,GAAW,WAAW,CAAC,YAAY,CAAC;QACpD,IAAM,YAAY,GAAW,WAAW,CAAC,iBAAiB,CAAC;QAC3D,OAAO,UAAU,KAAK,EAAE,IAAI,YAAY,KAAK,EAAE,CAAC;IAClD,CAAC;IAEO,oCAAe,GAAvB;QACE,IAAM,GAAG,GAAG,cAAc,CAAC;QAC3B,IAAM,WAAW,GAAG;YAClB,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU;YAC/C,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc;SACzD,CAAC;QACF,IAAM,IAAI,GAAW,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACjD,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;IAEO,mCAAc,GAAtB;QACE,IAAM,GAAG,GAAG,cAAc,CAAC;QAC3B,IAAM,WAAW,GAAG;YAClB,YAAY,EAAE,EAAE;YAChB,iBAAiB,EAAE,EAAE;SACtB,CAAC;QACF,IAAM,IAAI,GAAW,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACtD,IAAI;YACF,IAAI,IAAI,EAAE;gBACR,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACnC,IAAI,SAAS,CAAC,YAAY,EAAE;oBAC1B,WAAW,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC;oBAClD,WAAW,CAAC,iBAAiB,GAAG,SAAS,CAAC,iBAAiB,CAAC;iBAC7D;aACF;SACF;QAAC,OAAO,CAAC,EAAE;YACV,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;SACrC;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IACH,iBAAC;AAAD,CAvRA,AAuRC,IAAA","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\component\\page\\login","sourcesContent":["import LoginUI from \"./LoginUI\";\r\nimport { SOCKET_CONNECT } from \"../../../common/net/socket/SocketDefine\";\r\nimport NetController from \"../../../common/net/NetController\";\r\nimport * as Modules from \"../../../module/Modules\";\r\nimport AccModule from \"./AccModule\";\r\nimport * as ConfigVO from \"../../../common/config/vo/ConfigVO\";\r\nimport GamePersist from \"../../../common/persist/GamePersist\";\r\nimport HomeManager from \"../home/HomeManager\";\r\nimport { protoErrMsg, goToHome } from \"../../../common/Misc\";\r\nimport { ProtoErrorCode } from \"../../../common/net/proto/ProtoReflect\";\r\nimport NetUtil from \"../../../common/net/NetUtil\";\r\nimport { AccLoginC2S, AccReloginC2S, AccLoginS2C, AccReloginS2C, AccCreateS2C, AccEnterS2C, AccEnterC2S, AccCreateC2S, AccServertimeC2S } from \"../../../common/net/proto/mods/ProtoSectionAcc\";\r\nimport game = cc.game;\r\nimport { OpenHomeFrom } from \"../../../common/Defines\";\r\n\r\n\r\nexport default class AccManager {\r\n\r\n  private static singleInstance: AccManager;\r\n\r\n  public static get INSTANCE() {\r\n    if (!this.singleInstance) {\r\n      this.singleInstance = new AccManager();\r\n    }\r\n    return this.singleInstance;\r\n  }\r\n\r\n  private retryTimes: number = 0; // 断开连接后 重新连接尝试的次数\r\n  private loginUI: LoginUI;\r\n  private accModule: AccModule;\r\n\r\n  // 服务器参数\r\n  private serverID: string ;\r\n\r\n\r\n  constructor() {\r\n    this.accModule = Modules.Acc;\r\n  }\r\n\r\n  public set LoginUI(value: LoginUI) {\r\n    this.loginUI = value;\r\n  }\r\n\r\n  public get LoginUI(): LoginUI {\r\n    return this.loginUI;\r\n  }\r\n\r\n  public setServerData(ID: string) {\r\n    this.serverID = ID;\r\n    // this.loginUI.btnServer.node.getComponentInChildren(cc.Label).string = ConfigVO.ServerList.get(ID).name;\r\n  }\r\n\r\n  // 获取到授权\r\n  public didGetAuthorize(data) {\r\n    this.accModule.LoginData = data;\r\n    if (NetController.INSTANCE.Connected) {\r\n      this.requestLogin();\r\n    } else {\r\n      this.connectServer(data);\r\n    }\r\n  }\r\n\r\n  // 进入游戏\r\n  public didEnterGame() {\r\n    //console.log(\"didEnterGame 成功进入游戏\");\r\n  }\r\n\r\n  // 切换到Home 这里有一个加载过程 非直接切换过去\r\n  public switchToHome() {\r\n    Modules.Home.OpenHomeFrom = OpenHomeFrom.UI_LOGIN;\r\n    GamePersist.INSTANCE.loadScene('home')\r\n  }\r\n\r\n  // 进行网络连接\r\n  public connectServer(data) {\r\n    this.retryTimes = 0;\r\n    \r\n    NetController.INSTANCE.on(SOCKET_CONNECT,  this.onServerConnected, this);\r\n    NetController.INSTANCE.off(SOCKET_CONNECT, this.onServerReConnected, this);\r\n    \r\n    const serverVo: ConfigVO.IServerListVO = ConfigVO.ServerList.get(this.serverID);\r\n    NetController.INSTANCE.connect(serverVo.ip, serverVo.port, serverVo.path, serverVo.security);\r\n  }\r\n\r\n  // 重新连接服务器\r\n  public reConnectServer() {\r\n    GamePersist.INSTANCE.ForceWaiting();\r\n    this.retryTimes = this.retryTimes + 1;    \r\n    NetController.INSTANCE.on(SOCKET_CONNECT,   this.onServerReConnected, this);\r\n    NetController.INSTANCE.off(SOCKET_CONNECT,  this.onServerConnected, this);\r\n    const serverVo: ConfigVO.IServerListVO = ConfigVO.ServerList.get(this.serverID);\r\n    NetController.INSTANCE.reConnect(serverVo.ip, serverVo.port, serverVo.path, serverVo.security);\r\n  }\r\n\r\n  // 网络成功连接\r\n  public onServerConnected(data) {\r\n    NetController.INSTANCE.off(SOCKET_CONNECT, this.onServerConnected, this);\r\n    this.requestLogin();\r\n  }\r\n\r\n  // 网络重新连接成功\r\n  public onServerReConnected() {\r\n    NetController.INSTANCE.off(SOCKET_CONNECT, this.onServerReConnected, this);\r\n    this.requestReLogin();\r\n  }\r\n\r\n  // 请求登录\r\n  public requestLogin() {\r\n    const gameAccount = this.getGameAccount();\r\n    // console.log(\"gameAccount\",gameAccount,\"game_open_id\",gameAccount.game_open_id);\r\n    const gameAccountId: string = gameAccount.game_open_id;\r\n    const gameAccountSign: string = gameAccount.game_open_id_sign;\r\n    // 发送登陆协议\r\n    const loginMsg = new AccLoginC2S();\r\n    loginMsg.platform        = this.accModule.DataAcc.accPlatform;\r\n    loginMsg.channelParam    = this.accModule.DataAcc.accPlatformParam;\r\n    loginMsg.channelOpenId   = this.accModule.DataAcc.accOpenId;\r\n    loginMsg.gameAccountId   = gameAccountId;\r\n    loginMsg.gameAccountSign = gameAccountSign;\r\n    console.log(\"发送的登录协议\" + loginMsg.platform + loginMsg.channelOpenId + \"频道openid\" + loginMsg.channelParam);\r\n    NetUtil.SendMsg(loginMsg);\r\n  }\r\n\r\n  // 请求重新登录\r\n  public requestReLogin() {\r\n    const reloginMsg    = new AccReloginC2S();\r\n    reloginMsg.id       = this.accModule.PlayerId;\r\n    reloginMsg.loginKey = this.accModule.DataAcc.gameLoginToken;\r\n    reloginMsg.openId   = this.accModule.DataAcc.gameOpenId;\r\n    NetUtil.SendMsg(reloginMsg);\r\n  }\r\n\r\n  // 收到服务器端的登陆回应\r\n  public onReceiveLoginS2C(msg: AccLoginS2C) {\r\n    if (!this.loginUI) {\r\n      return;\r\n    }\r\n\r\n    if (msg.code > 0) {\r\n      this.loginUI.hideLoading();\r\n\r\n      const errMsg = protoErrMsg(msg.code);\r\n      GamePersist.INSTANCE.Toast(errMsg);\r\n      window['Partner'].cleanLoginState();\r\n\r\n      if (window['Partner'].PARTNER_NAME !== \"Dev\") {\r\n        this.loginUI.showAccInput(2);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const channelOpenId: string   = msg.channelOpenId;    // 第三方的open id\r\n    const gameAccountId: string   = msg.gameAccountId;    // 游戏角色的账号Id\r\n    const gameAccountSign: string = msg.gameAccountSign;  // 游戏账号Id的签名(用于验证)\r\n    const gameLoginToken: string  = msg.gameLoginKey;     // 本次登陆的token\r\n\r\n    this.accModule.DataAcc.accOpenId      = channelOpenId;\r\n    this.accModule.DataAcc.gameLoginToken = gameLoginToken;\r\n    this.accModule.DataAcc.gameUnionid    = gameLoginToken;\r\n    this.accModule.DataAcc.gameOpenId     = gameAccountId;\r\n    this.accModule.DataAcc.gameOpenIdSign = gameAccountSign;\r\n    // 同时存储到Partner中\r\n    window['Partner'].userInfo.openId = channelOpenId;\r\n    this.saveGameAccount();\r\n    const playerId: number = msg.id;\r\n    // console.log(\"msg:\",msg,\"msg.id\",msg.id);\r\n    if (playerId > 0) {\r\n      this.accModule.PlayerId = playerId;\r\n      this.doSendEnterGame();\r\n    } else {\r\n      this.handleCreatePlayer();\r\n    }\r\n    \r\n    // 开始同步服务器时间\r\n    GamePersist.INSTANCE.startSyncServerTime();\r\n  }\r\n\r\n\r\n  // 收到重新登录的返回\r\n  public onReceiveReLoginS2C(msg: AccReloginS2C) {\r\n    GamePersist.INSTANCE.CancelWaiting();\r\n    // 重登录成功\r\n    cc.log(msg);\r\n    if (msg.code === 0) {\r\n      this.retryTimes = 0;\r\n      HomeManager.INSTANCE.onReLaunch();\r\n    }\r\n  }\r\n\r\n\r\n  // 收到创建角色的返回\r\n  public onReceiveCreateS2C(msg: AccCreateS2C) {\r\n    if (!this.loginUI) {\r\n      return;\r\n    }\r\n    if (msg.code > 0) {\r\n      const errMsg  = ProtoErrorCode[msg.code] || \"ErrCode:\" + msg.code;\r\n      GamePersist.INSTANCE.toast(errMsg);\r\n      return;\r\n    }\r\n    const playerId: number = msg.id;\r\n    this.accModule.PlayerId = playerId;\r\n    // 进入游戏\r\n    this.doSendEnterGame();\r\n  }\r\n\r\n  // 收到服务器对进入游戏的返回\r\n  public onReceiveEnterS2C(msg: AccEnterS2C) {\r\n    if (!this.loginUI) {\r\n      return;\r\n    }\r\n    if (msg.code > 0) {\r\n      // TODO 进行错误的提示\r\n      GamePersist.INSTANCE.toast(\"EnterS2C\" +  msg.code);\r\n      return;\r\n    }\r\n    this.didEnterGame();\r\n  }\r\n\r\n  // 发送进入游戏协议\r\n  public doSendEnterGame() {\r\n    const enterMsg: AccEnterC2S = new AccEnterC2S();\r\n    enterMsg.id = this.accModule.PlayerId;\r\n    NetUtil.SendMsg(enterMsg);\r\n  }\r\n\r\n  // 角色创建逻辑 如果平台支持获取用户信息 就不显示创建角色的界面\r\n  public handleCreatePlayer() {\r\n    if (window['Partner'].supportUserInfo()) {\r\n      this.doSendCreatePlayer();\r\n    } else {\r\n      this.loginUI.showAccCreateRole();\r\n    }\r\n  }\r\n\r\n\r\n  // 发送创建玩家协议\r\n  public doSendCreatePlayer() {\r\n    const createMsg: AccCreateC2S = new AccCreateC2S();\r\n    NetUtil.SendMsg(createMsg);\r\n  }\r\n\r\n  public get RetryTimes(): number {\r\n    return this.retryTimes;\r\n  }\r\n  public set RetryTimes(value: number) {\r\n    this.retryTimes = value;\r\n  }\r\n\r\n  // 请求服务器时间\r\n  public requestServerTime() {\r\n    if (NetController.INSTANCE.Connected) {\r\n      const msgServerTime = new AccServertimeC2S();\r\n      NetUtil.SendMsg(msgServerTime);\r\n    }\r\n  }\r\n\r\n  // 是否存在保存的游戏账号信息\r\n  public existSavedGameAccount(): boolean {\r\n    const gameAccount = this.getGameAccount();\r\n    const gameOpenId: string = gameAccount.game_open_id;\r\n    const gameOpenSign: string = gameAccount.game_open_id_sign;\r\n    return gameOpenId !== \"\" && gameOpenSign !== \"\";\r\n  }\r\n\r\n  private saveGameAccount() {\r\n    const key = \"game_account\";\r\n    const gameAccount = {\r\n      game_open_id: this.accModule.DataAcc.gameOpenId,\r\n      game_open_id_sign: this.accModule.DataAcc.gameOpenIdSign,\r\n    };\r\n    const data: string = JSON.stringify(gameAccount);\r\n    cc.sys.localStorage.setItem(key, data);\r\n  }\r\n\r\n  private getGameAccount() {\r\n    const key = \"game_account\";\r\n    const gameAccount = {\r\n      game_open_id: \"\",\r\n      game_open_id_sign: \"\",\r\n    };\r\n    const data: string = cc.sys.localStorage.getItem(key);\r\n    try {\r\n      if (data) {\r\n        const savedData = JSON.parse(data);\r\n        if (savedData.game_open_id) {\r\n          gameAccount.game_open_id = savedData.game_open_id;\r\n          gameAccount.game_open_id_sign = savedData.game_open_id_sign;\r\n        }\r\n      }\r\n    } catch (e) {\r\n      cc.warn(\"faild parse account data\");\r\n    }\r\n    return gameAccount;\r\n  }\r\n}\r\n"]}