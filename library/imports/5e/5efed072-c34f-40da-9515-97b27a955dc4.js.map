{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\component\\game\\pve/assets\\scripts\\app\\component\\game\\pve\\Board_pve.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\component\\game\\pve","sourcesContent":["import { TILE_TYPE, GRID_TYPE, TRANSPORT_TYPE, GAME_MODEL, MAX_MATCH, PET_TYPE, BLOCK_COLOR, BOMB_TYPE, BLOCKDES_TYPE } from \"../PlayDefine\";\r\nimport { Play } from \"../../../module/Modules\";\r\nimport StateMgr from \"./StateMgr\";\r\nimport * as Algorithm from \"../Algorithm\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Board_pve extends cc.Component {\r\n    @property(cc.Prefab)\r\n    pfbGate: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    pfbGate2: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    pfbArrow: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    nodBoard: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    panelGrid: cc.Node = null;\r\n    @property(cc.Node)\r\n    panelTrickUp: cc.Node = null;\r\n\r\n    @property(cc.Prefab)\r\n    pfbTileBg: cc.Prefab = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    spfTileBgWhite: cc.SpriteFrame = null;\r\n    @property(cc.SpriteFrame)\r\n    spfTileBgBlack: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    spfArrow: cc.SpriteFrame = null;\r\n\r\n    layerGame;\r\n\r\n    onLoad() {\r\n    }\r\n\r\n    // 初始化地图\r\n    public initMap(layerGame) {\r\n        this.layerGame = layerGame;\r\n        if (this.panelTrickUp) {\r\n            this.panelTrickUp.destroyAllChildren();\r\n        }\r\n        let levelData = Play.LevelDatas['level_' + Play.DataPve.curLevel];\r\n        Play.DataPve.levelData = levelData;\r\n\r\n        if (!Play.LevelDatas || !levelData || !levelData.grid) {\r\n            return;\r\n        }\r\n        let empty = levelData.grid.empty || [];\r\n        let transport = levelData.grid.transport || [];\r\n        let gate = levelData.grid.gate || [];\r\n\r\n        for (let x = 0; x < 8; ++x) {\r\n            Play.DataPve.grid[x] = [];\r\n            for (let y = 0; y < 9; ++y) {\r\n                Play.DataPve.grid[x][y] = GRID_TYPE.TILE;\r\n            }\r\n        }\r\n\r\n        // 空缺\r\n        for (let i = 0; i < empty.length; ++i) {\r\n            let x = Math.floor(empty[i] / (Play.DataPve.grid.length + 1));\r\n            let y = empty[i] % Play.DataPve.grid[0].length;\r\n            Play.DataPve.grid[x][y] = GRID_TYPE.EMPTY;\r\n        }\r\n        // this.initTileBg();\r\n        this.getComponent('FrameManager').initFrame();\r\n\r\n        // 输送带\r\n        if (transport.length > 0) {\r\n            StateMgr.INSTANCE.haveTransport = true;\r\n            for (let i = 0; i < transport.length; ++i) {\r\n                let startX = Math.floor(transport[i].start / (Play.DataPve.grid.length + 1));\r\n                let startY = transport[i].start % Play.DataPve.grid[0].length;\r\n                let endX = Math.floor(transport[i].end / (Play.DataPve.grid.length + 1));\r\n                let endY = transport[i].end % Play.DataPve.grid[0].length;\r\n\r\n                for (let j = startX; j <= endX; ++j) {\r\n                    if (Play.DataPve.grid[j][startY] != GRID_TYPE.EMPTY) {\r\n                        if (transport[i].type === TRANSPORT_TYPE.LEFT) {\r\n                            Play.DataPve.grid[j][startY] = GRID_TYPE.LEFTTRANSPORT;\r\n                        } else if (transport[i].type === TRANSPORT_TYPE.RIGHT) {\r\n                            Play.DataPve.grid[j][startY] = GRID_TYPE.RIGHTTRANSPORT;\r\n                        } else if (transport[i].type === TRANSPORT_TYPE.UP) {\r\n                            Play.DataPve.grid[j][startY] = GRID_TYPE.UPTRANSPORT;\r\n                        } else if (transport[i].type === TRANSPORT_TYPE.DOWN) {\r\n                            Play.DataPve.grid[j][startY] = GRID_TYPE.DOWNTRANSPORT;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            StateMgr.INSTANCE.haveTransport = false;\r\n        }\r\n\r\n        // 传送门\r\n        for (let i = 0; i < gate.length; ++i) {\r\n            let x = Math.floor(gate[i].upgate / (Play.DataPve.grid.length + 1));\r\n            let y = gate[i].upgate % Play.DataPve.grid[0].length;\r\n            Play.DataPve.grid[x][y] = GRID_TYPE.UPGATE;\r\n\r\n            var nodGate = cc.instantiate(this.pfbGate);\r\n            nodGate.rotation = 180;\r\n            nodGate.width = 80;\r\n            nodGate.height = 17;\r\n            nodGate.parent = this.panelTrickUp;\r\n            nodGate.setPosition(80 * (x - 4) + 80 / 2,\r\n                80 * y + 80 / 2 + 25);\r\n\r\n\r\n            x = Math.floor(gate[i].downgate / (Play.DataPve.grid.length + 1));\r\n            y = gate[i].downgate % Play.DataPve.grid[0].length;\r\n            Play.DataPve.grid[x][y] = GRID_TYPE.DOWNGATE;\r\n\r\n            var nodGate = cc.instantiate(this.pfbGate2);\r\n            nodGate.width = 80;\r\n            nodGate.height = 17;\r\n            nodGate.parent = this.panelTrickUp;\r\n            nodGate.setPosition(80 * (x - 4) + 80 / 2,\r\n                80 * y + 80 / 2 - 28);\r\n\r\n        }\r\n\r\n        // 箭头\r\n        let hasPet = false;\r\n        for (let i = 0; i < levelData.objective.length; ++i) {\r\n            if (levelData.objective[i].tileType == TILE_TYPE.PET) {\r\n                hasPet = true;\r\n            }\r\n        }\r\n        if (hasPet) {\r\n            this.initDownArrow();\r\n        }\r\n\r\n        this.initGrid();\r\n        this.initTileBg();\r\n        this.initProp();\r\n        this.initBlock();\r\n        this.initTransport();\r\n        this.randomItem();\r\n        this.initFallDownPoint();\r\n    }\r\n\r\n    private initDownArrow() {\r\n        for (let x = 0; x < Play.DataPve.grid.length; ++x) {\r\n            for (let y = 0; y < Play.DataPve.grid[x].length; ++y) {\r\n                if (Play.DataPve.grid[x][y] != GRID_TYPE.EMPTY && Play.DataPve.grid[x][y] != GRID_TYPE.DOWNGATE) {\r\n                    var nodArrow = cc.instantiate(this.pfbArrow);\r\n                    nodArrow.getComponent(cc.Sprite).spriteFrame = this.spfArrow;\r\n                    nodArrow.width = 80;\r\n                    nodArrow.height = 17;\r\n                    nodArrow.parent = this.panelTrickUp;\r\n                    nodArrow.setPosition(80 * (x - 4) + 80 / 2,\r\n                        80 * y + 80 / 2 - 65);\r\n                    nodArrow.runAction(cc.repeatForever(cc.sequence(\r\n                        cc.moveBy(0.5, 0, -10),\r\n                        cc.moveBy(0.5, 0, 10)\r\n                    )))\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 初始格子背景\r\n    private initTileBg() {\r\n        this.panelGrid.destroyAllChildren();\r\n        for (let x = 0; x < Play.DataPve.grid.length; ++x) {\r\n            this.layerGame.tileBgs[x] = [];\r\n            this.layerGame.transports[x] = []\r\n            for (let y = 0; y < Play.DataPve.grid[0].length; ++y) {\r\n                if (Play.DataPve.grid[x][y] == GRID_TYPE.EMPTY) {\r\n                    continue\r\n                }\r\n                let nodTileBg = cc.instantiate(Play.DataPve.pfbTileBg);\r\n                this.layerGame.tileBgs[x][y] = nodTileBg;\r\n                nodTileBg.parent = this.panelGrid;\r\n                nodTileBg.setPosition(80 * (x - 4) + 80 / 2,\r\n                    80 * y + 80 / 2);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 生成初始道具\r\n    initProp() {\r\n        let empty = Play.DataPve.levelData.tile.empty || [];\r\n        let block = Play.DataPve.levelData.tile.block || [];\r\n        let bomb = Play.DataPve.levelData.tile.bomb || [];\r\n        let pet = Play.DataPve.levelData.tile.pet || [];\r\n        let wall = Play.DataPve.levelData.tile.wall || [];\r\n        let tableware = Play.DataPve.levelData.tile.tableware;\r\n\r\n        for (let i = 0; i < empty.length; ++i) {\r\n            let x = Math.floor(empty[i] / (this.layerGame.tiles.length + 1));\r\n            let y = empty[i] % this.layerGame.tiles[0].length;\r\n            if (this.layerGame.tiles[x][y]) {\r\n                this.layerGame.tiles[x][y].destroyTile(BLOCKDES_TYPE.NOACTION_NODES);\r\n                this.layerGame.tiles[x][y] = null;\r\n            }\r\n        }\r\n        for (let i = 0; i < block.length; ++i) {\r\n            let x = Math.floor(block[i].index / (this.layerGame.tiles.length + 1));\r\n            let y = block[i].index % this.layerGame.tiles[0].length;\r\n            this.layerGame.spawnBlock(x, y, block[i].type);\r\n        }\r\n        for (let i = 0; i < bomb.length; ++i) {\r\n            let x = Math.floor(bomb[i].index / (this.layerGame.tiles.length + 1));\r\n            let y = bomb[i].index % this.layerGame.tiles[0].length;\r\n            if (bomb[i].type === BOMB_TYPE.BOMB_ONE_COLOR) {\r\n                this.layerGame.spawnBomb(x, y, bomb[i].type, BLOCK_COLOR.BLUE);\r\n            } else {\r\n                this.layerGame.spawnBomb(x, y, bomb[i].type);\r\n            }\r\n        }\r\n        for (let i = 0; i < pet.length; ++i) {\r\n            let x = Math.floor(pet[i].index / (this.layerGame.tiles.length + 1));\r\n            let y = pet[i].index % this.layerGame.tiles[0].length;\r\n            this.layerGame.spawnPet(x, y, PET_TYPE.TYPE_1, false);\r\n            Play.DataPve.changePetOrBugData(TILE_TYPE.PET, PET_TYPE.TYPE_1, null);\r\n        }\r\n        for (let i = 0; i < wall.length; ++i) {\r\n            let x = Math.floor(wall[i].index / (this.layerGame.tiles.length + 1));\r\n            let y = wall[i].index % this.layerGame.tiles[0].length;\r\n            this.layerGame.spawnWall(x, y, wall[i].type);\r\n        }\r\n        for (let i = 0; i < tableware.length; ++i) {\r\n            let x = Math.floor(tableware[i].index / (this.layerGame.tiles.length + 1));\r\n            let y = tableware[i].index % this.layerGame.tiles[0].length;\r\n            this.layerGame.spawnTableware(x, y, tableware[i].type, false);\r\n            Play.DataPve.changePetOrBugData(TILE_TYPE.TABLEWARE, tableware[i].type, null);\r\n        }\r\n    }\r\n    // 生成输送带\r\n    initTransport() {\r\n        for (var x = 0; x < this.layerGame.tiles.length; ++x) {\r\n            for (var y = 0; y < this.layerGame.tiles[x].length; ++y) {\r\n                if (Play.DataPve.grid[x][y] == GRID_TYPE.LEFTTRANSPORT) {\r\n                    // this.panelTrick\r\n                    let nodTransport = cc.instantiate(Play.DataPve.pfbTransport);\r\n                    nodTransport.getChildByName('mask').getChildByName('sprite').rotation = 180;\r\n                    nodTransport.parent = this.layerGame.panelTrickDown;\r\n                    this.layerGame.transports[x][y] = nodTransport;\r\n                    nodTransport.setPosition(80 * (x - 4) + 80 / 2,\r\n                        80 * y + 80 / 2);\r\n                } else if (Play.DataPve.grid[x][y] == GRID_TYPE.RIGHTTRANSPORT) {\r\n                    let nodTransport = cc.instantiate(Play.DataPve.pfbTransport);\r\n                    nodTransport.getChildByName('mask').getChildByName('sprite').rotation = 0;\r\n                    nodTransport.parent = this.layerGame.panelTrickDown;\r\n                    this.layerGame.transports[x][y] = nodTransport;\r\n                    nodTransport.setPosition(80 * (x - 4) + 80 / 2,\r\n                        80 * y + 80 / 2);\r\n                } else if (Play.DataPve.grid[x][y] == GRID_TYPE.UPTRANSPORT) {\r\n                    let nodTransport = cc.instantiate(Play.DataPve.pfbTransport);\r\n                    nodTransport.getChildByName('mask').getChildByName('sprite').rotation = 270;\r\n                    nodTransport.parent = this.layerGame.panelTrickDown;\r\n                    this.layerGame.transports[x][y] = nodTransport;\r\n                    nodTransport.setPosition(80 * (x - 4) + 80 / 2,\r\n                        80 * y + 80 / 2);\r\n                } else if (Play.DataPve.grid[x][y] == GRID_TYPE.DOWNTRANSPORT) {\r\n                    let nodTransport = cc.instantiate(Play.DataPve.pfbTransport);\r\n                    nodTransport.getChildByName('mask').getChildByName('sprite').rotation = 90;\r\n                    nodTransport.parent = this.layerGame.panelTrickDown;\r\n                    this.layerGame.transports[x][y] = nodTransport;\r\n                    nodTransport.setPosition(80 * (x - 4) + 80 / 2,\r\n                        80 * y + 80 / 2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 生成初始方块\r\n    initBlock() {\r\n        for (var x = 0; x < this.layerGame.tiles.length; ++x) {\r\n            for (var y = 0; y < this.layerGame.tiles[x].length; ++y) {\r\n                if (Play.DataPve.grid[x][y] == GRID_TYPE.EMPTY || this.layerGame.tiles[x][y]) {\r\n                    continue;\r\n                }\r\n                var count = 0;\r\n                var randomNum = 0;\r\n                while (true) {\r\n                    if (count >= 1000000) {\r\n                        return\r\n                    }\r\n                    count++;\r\n                    var arr = new Array();\r\n                    var scanArr = new Array();\r\n                    randomNum = Math.floor(Math.random() * Play.DataPve.levelData.blockcount) + 1;\r\n\r\n                    Algorithm.scanAround(x, y, -1, -1, randomNum, arr, scanArr, this.layerGame.tiles);\r\n                    if (arr.length < MAX_MATCH) {\r\n                        this.layerGame.spawnBlock(x, y, randomNum);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //  生成棋盘\r\n    initGrid() {\r\n        for (var x = 0; x < Play.DataPve.grid.length; ++x) {\r\n            this.layerGame.tiles[x] = [];\r\n            for (var y = 0; y < Play.DataPve.grid[x].length; ++y) {\r\n                this.layerGame.tiles[x][y] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 生成下落点\r\n    initFallDownPoint() {\r\n        let fallDownPoint = Play.DataPve.levelData.fallDownPoint || [];\r\n        for (let i = 0; i < fallDownPoint.length; ++i) {\r\n            let x = Math.floor(fallDownPoint[i] / (this.layerGame.tiles.length + 1));\r\n            let y = fallDownPoint[i] % this.layerGame.tiles[0].length;\r\n            Play.DataPve.fallDownPoint.push(x + '#' + y);\r\n        }\r\n    }\r\n\r\n    // 开局随机生成宠物\r\n    private randomItem() {\r\n        // 找出所有block\r\n        let blocks = [];\r\n        for (let x = 0; x < this.layerGame.tiles.length; ++x) {\r\n            for (let y = 0; y < this.layerGame.tiles[x].length; ++y) {\r\n                if (this.layerGame.tiles[x][y] && this.layerGame.tiles[x][y].tileType === TILE_TYPE.BLOCK) {\r\n                    blocks.push(x + \"#\" + y);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < Play.DataPve.levelData.spawnItem.length; ++i) {\r\n            // 不需要生成\r\n            if (!Play.DataPve.levelData.spawnItem[i].count) {\r\n                continue;\r\n            }\r\n\r\n            for (let j = 0; j < Play.DataPve.levelData.spawnItem[i].count; ++j) {\r\n                let item = Play.DataPve.levelData.spawnItem[i];\r\n                // 随机一个生成一个宠物\r\n                let typeIndex = Math.floor(Math.random() * item.type.length);\r\n                let loop = true;\r\n                while (loop) {\r\n                    let index = Math.floor(Math.random() * blocks.length);\r\n                    let x = Number(blocks[index].split(\"#\")[0]);\r\n                    let y = Number(blocks[index].split(\"#\")[1]);\r\n\r\n                    if (this.layerGame.tiles[x][y - 1] && this.layerGame.tiles[x][y].tileType === TILE_TYPE.BLOCK) {\r\n                        this.layerGame.spawnTile(x, y, item.tileType, item.type[typeIndex], item.subType);\r\n                        loop = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n"]}