{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\common\\runtime/assets\\scripts\\app\\common\\runtime\\RuntimeManager.ts"],"names":[],"mappings":";;;;;AAAA,sDAAiD;AACjD,sDAAiD;AACjD,qEAAgE;AAChE,sCAAmC;AACnC,qDAAkD;AAI5C,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAE1C;IADA;QAWY,oBAAe,GAAQ,IAAI,CAAC;QAC5B,iBAAY,GAAY,KAAK,CAAC;IA8D1C,CAAC;uBAzEoB,cAAc;IAC/B,sBAAkB,0BAAQ;aAA1B;YACI,IAAI,CAAC,gBAAc,CAAC,cAAc,EAAE;gBAChC,gBAAc,CAAC,cAAc,GAAG,IAAI,gBAAc,EAAE,CAAC;aACxD;YACD,OAAO,gBAAc,CAAC,cAAc,CAAC;QACzC,CAAC;;;OAAA;IAQM,6BAAI,GAAX;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,CAAC,SAAS,CAAC,CAAC,sBAAsB,CAAC,UAAU,GAAG;YAClD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,CAAC,sBAAsB,CAAC;YACrC,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,sBAAW,wCAAY;QADvB,UAAU;aACV;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;;;OAAA;IAED,sBAAW,2CAAe;aAA1B;YACI,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;YACrC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,OAAO,OAAO,CAAC;QACnB,CAAC;;;OAAA;IAGO,+BAAM,GAAd;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,qBAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;IAC5C,CAAC;IAED,aAAa;IACL,+BAAM,GAAd,UAAe,aAAkB;QAC7B,6GAA6G;QAC7G,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACpB,OAAO;SACV;QAED,mBAAQ,CAAC,IAAI,CAAC,iBAAO,CAAC,MAAM,CAAC,CAAC;QAE9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,qBAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;QAExC,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,KAAK,QAAQ,EAAE;YAC7C,YAAY;YACZ,YAAY;YACZ,IAAM,OAAO,GAAW,aAAa,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,CAAC,aAAa,CAAC,QAAQ,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,IAAI,EAAE;gBAClE,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC;aACxC;iBAAM;gBACH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC/B;YACD,4DAA4D;SAC/D;QAED,IAAI,CAAC,uBAAa,CAAC,QAAQ,CAAC,SAAS,EAAE;YACnC,qCAAqC;YACrC,uBAAa,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;SAC1C;aAAM;YACH,uCAAuC;YACvC,qBAAW,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;SACrC;IACL,CAAC;IAxEgB,cAAc;QADlC,OAAO;OACa,cAAc,CAyElC;IAAD,qBAAC;;CAzED,AAyEC,IAAA;kBAzEoB,cAAc","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\common\\runtime","sourcesContent":["import NetController from \"../net/NetController\";\r\nimport GamePersist from \"../persist/GamePersist\";\r\nimport HomeManager from \"../../component/page/home/HomeManager\";\r\nimport {Message} from \"../Message\";\r\nimport {DYNotify} from \"../../../dyGame/DYNotify\";\r\nimport * as Misc from \"../Misc\";\r\nimport * as Modules from \"../../module/Modules\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n@ccclass\r\nexport default class RuntimeManager {\r\n    public static get INSTANCE(): RuntimeManager {\r\n        if (!RuntimeManager.singleInstance) {\r\n            RuntimeManager.singleInstance = new RuntimeManager();\r\n        }\r\n        return RuntimeManager.singleInstance;\r\n    }\r\n\r\n    private static singleInstance: RuntimeManager;\r\n\r\n    private reLaunchOptions: any = null;\r\n    private isBackground: boolean = false;\r\n\r\n\r\n    public init() {\r\n        const self = this;\r\n        window['Partner'].registerOnShowCallback(function (res) {\r\n            self.onShow(res);\r\n        });\r\n        window['Partner'].registerOnHideCallback(function () {\r\n            self.onHide();\r\n        });\r\n    }\r\n\r\n    // 当前是否在后台\r\n    public get IsBackground(): boolean {\r\n        return this.isBackground;\r\n    }\r\n\r\n    public get ReLaunchOptions(): any {\r\n        const options = this.reLaunchOptions;\r\n        this.reLaunchOptions = null;\r\n        return options;\r\n    }\r\n\r\n\r\n    private onHide() {\r\n        this.isBackground = true;\r\n        GamePersist.INSTANCE.RootUI.onAppHide();\r\n    }\r\n\r\n    // 当回到前台的时候处理\r\n    private onShow(launchOptions: any) {\r\n        // console.log(\"#########onShow isback:\", this.isBackground, \" connect:\" + NetController.INSTANCE.Connected);\r\n        if (!this.isBackground) {\r\n            return;\r\n        }\r\n\r\n        DYNotify.post(Message.OnShow);\r\n\r\n        this.isBackground = false;\r\n        GamePersist.INSTANCE.RootUI.onAppShow();\r\n\r\n        if (window['Partner'].PARTNER_NAME === \"Wechat\") {\r\n            // 1007 单聊会话\r\n            // 1008 群聊会话\r\n            const wxScene: number = launchOptions.scene || -1;\r\n            if (!!launchOptions.reLaunch || wxScene === 1007 || wxScene === 1008) {\r\n                this.reLaunchOptions = launchOptions;\r\n            } else {\r\n                this.reLaunchOptions = null;\r\n            }\r\n            // //console.log(\"#########launch Options:\", launchOptions);\r\n        }\r\n\r\n        if (!NetController.INSTANCE.Connected) {\r\n            // 如果没有连接网络 则调用NetController处理网络断开的逻辑\r\n            NetController.INSTANCE.onSocketClose();\r\n        } else {\r\n            // 如果当前有网络 则检查是否是ReLaunch:即点击其他人分享的卡片进入\r\n            HomeManager.INSTANCE.onReLaunch();\r\n        }\r\n    }\r\n}\r\n"]}