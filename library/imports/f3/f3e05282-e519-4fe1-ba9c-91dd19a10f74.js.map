{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\common\\net\\proto/assets\\scripts\\app\\common\\net\\proto\\ProtoCrypto.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\common\\net\\proto","sourcesContent":["import { ByteArray } from \"../NetByteArray\";\n\nexport const KeyList: number[] = [\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\n31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,\n46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,\n76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,\n91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105,\n106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120,\n121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,\n136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,\n151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165,\n166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180,\n181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195,\n196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,\n211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225,\n226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240,\n241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255,\n];\nexport const KeyMask: number = 237;\n\nexport function encode(index: number, msgId: number, byteArray: ByteArray) {\n  byteArray.position = 0;\n  const key = KeyList[index];\n  const tmp = key << 8;\n  const byteArray2 = new ByteArray();\n  byteArray2.writeUnsignedShort(byteArray.length + 4);\n  byteArray2.writeByte(index ^ KeyMask);\n  byteArray2.writeUnsignedShort(msgId ^ (key + tmp));\n  byteArray2.writeByte(0);\n  let acc = 0;\n  for (let i = 0; i < byteArray.length; i++) {\n    const byte = byteArray.readUnsignedByte();\n    acc += byte;\n    byteArray2.writeByte(byte ^ key);\n  }\n  byteArray2.position = 5;\n  byteArray2.writeByte(calcCheckSum(acc) ^ key);\n  return byteArray2;\n}\n\nexport function decode(maskedIndex: number, byteArray: ByteArray) {\n  const byteArray2 = new ByteArray();\n  const key = KeyList[maskedIndex ^ KeyMask];\n  let checkSum;\n  let tmp;\n  let acc = 0;\n  for (let i = byteArray.position; i < byteArray.length; i++) {\n    if (i === 3) {\n      checkSum = byteArray.readUnsignedByte() ^ key;\n    } else {\n      tmp = byteArray.readUnsignedByte() ^ key;\n      if (i > 3) {\n        acc += tmp;\n      }\n      byteArray2.writeByte(tmp);\n    }\n  }\n  if (checkSum !== calcCheckSum(acc)) {\n    const e = new Error(\"InvalidMsg\");\n    e.message = \"checksum is not same\";\n    throw e;\n  }\n\n  byteArray2.position = 0;\n  return byteArray2;\n}\n\nfunction calcCheckSum(value: number) {\n  return Math.floor(value / 128) % 128 + value % 128;\n}\n"]}