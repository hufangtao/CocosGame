{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\component\\page\\home/assets\\scripts\\app\\component\\page\\home\\DebugNetHandler.ts"],"names":[],"mappings":";;;;;AAAA,6EAA4E;AAC5E,sFAAiF;AACjF,uEAAqF;AACrF,mEAA8D;AACtD,IAAA,+BAAO,CAAmB;AAGlC;IAGE;QAFQ,qBAAgB,GAAG,EAAE,CAAC;QAG5B,iCAAe,CAAC,EAAE,CAAC,iCAAa,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAC7E,CAAC;IAEO,2CAAiB,GAAzB,UAA0B,OAAO;QAC/B,IAAM,aAAa,GAAkB,OAAO,CAAC;QAC7C,IAAM,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC;QACnC,IAAM,KAAK,GAAK,aAAa,CAAC,KAAK,CAAC;QACpC,IAAM,KAAK,GAAK,0BAAW,CAAC,KAAK,CAAC,CAAC;QACnC,IAAM,SAAS,GAAW,KAAK,CAAC,UAAU,CAAC;QAC3C,IAAM,MAAM,GAAI,6BAAc,CAAC,OAAO,CAAC,IAAI,UAAU,GAAG,OAAO,CAAC;QAChE,IAAM,eAAe,GAAG,KAAK,IAAI,CAAC,CAAC;QACnC,qBAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,eAAe,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QACjF;;;;;;;;;;;;;UAaE;IACJ,CAAC;IA9BkB,eAAe;QADnC,OAAO;OACa,eAAe,CA6CnC;IAAD,sBAAC;CA7CD,AA6CC,IAAA;kBA7CoB,eAAe","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\component\\page\\home","sourcesContent":["import { DebugDispatcher } from \"../../../common/net/proto/ProtoDispatcher\";\r\nimport { DebugErrorS2C } from \"../../../common/net/proto/mods/ProtoSectionDebug\";\r\nimport { ProtoErrorCode, ProtoMsgMap } from \"../../../common/net/proto/ProtoReflect\";\r\nimport GamePersist from \"../../../common/persist/GamePersist\";\r\nconst { ccclass } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DebugNetHandler {\r\n  private msgErrorCallback = {};\r\n\r\n  constructor() {\r\n    DebugDispatcher.on(DebugErrorS2C.EVENT_NAME, this.onReceiveMsgError, this);\r\n  }\r\n\r\n  private onReceiveMsgError(message) {\r\n    const debugErrorS2C: DebugErrorS2C = message;\r\n    const errCode = debugErrorS2C.code;\r\n    const msgId   = debugErrorS2C.msgid;\r\n    const clazz   = ProtoMsgMap[msgId];\r\n    const eventName: string = clazz.EVENT_NAME;\r\n    const errMsg  = ProtoErrorCode[errCode] || \"ErrCode:\" + errCode;\r\n    const protoMsgSection = msgId >> 8;\r\n    GamePersist.INSTANCE.EmitProtoError(protoMsgSection, eventName, errCode, errMsg);\r\n    /*\r\n    const debugErrorS2C: DebugErrorS2C = message;\r\n    const errCode = debugErrorS2C.code;\r\n    const msgId   = debugErrorS2C.msgid;\r\n    const clazz   = ProtoMsgMap[msgId];\r\n    const eventName: string = clazz.EVENT_NAME;\r\n    const errMsg  = ProtoErrorCode[errCode];\r\n    const callbackConf: any = this.msgErrorCallback[eventName];\r\n    if (callbackConf) {\r\n      const callbackFunc    = callbackConf.callback;\r\n      const context = callbackConf.context;\r\n      callbackFunc.call(context, eventName, errCode);\r\n    }\r\n    */\r\n  }\r\n\r\n  /*\r\n  // 注册某个协议的错误码的回调\r\n  public onMsgError(eventName: string, callback: Function, callbackThis?: any) {\r\n    const callbackConf: any = {};\r\n    callbackConf.callback   = callback;\r\n    callbackConf.context    = callbackThis;\r\n    callbackConf[eventName] = callbackConf;\r\n  }\r\n  // 关闭某个协议的错误码的回调\r\n  public offMsgError(eventName: string) {\r\n    delete this.msgErrorCallback[eventName];\r\n  }\r\n  */\r\n}\r\n"]}