{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\common\\loader/assets\\scripts\\app\\common\\loader\\Loader.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\common\\loader","sourcesContent":["import { LoaderPriority, SINGLE_BATCH_KEY, LoadCompleteCallback, LoadItemStatus, ILoadItemDesc } from \"./LoadDefine\";\r\nimport LoadItem from \"./LoadItem\";\r\nimport LoadBatch from \"./LoadBatch\";\r\nimport { RESOURCE_CONFIG_PATH_ROOT } from \"../Defines\";\r\n\r\nexport default class ResLoader {\r\n\r\n  // 加载一个配置文件 仅用来加载配置文件\r\n  public static loadConfig(cfgName: string, callback: LoadCompleteCallback) {\r\n    const path = RESOURCE_CONFIG_PATH_ROOT + cfgName;\r\n    ResLoader.loadSingle(path, callback);\r\n  }\r\n\r\n  public static loadSpriteFrame(path: string, callback: LoadCompleteCallback) {\r\n    ResLoader.loadSingle(path, callback, LoaderPriority.NORMAL, SINGLE_BATCH_KEY, cc.SpriteFrame);\r\n  }\r\n\r\n  // 加载一个SpriteAtlas\r\n  public static loadSpriteAtlas(path: string, callback: LoadCompleteCallback) {\r\n    ResLoader.loadSingle(path, callback, LoaderPriority.NORMAL, SINGLE_BATCH_KEY, cc.SpriteAtlas);\r\n  }\r\n\r\n\r\n  // 加载一个文件\r\n  public static loadSingle(path: string, callback: LoadCompleteCallback, priority?: LoaderPriority, key?: string, assetType?: typeof cc.Asset | typeof cc.RawAsset) {\r\n    key = key || SINGLE_BATCH_KEY;\r\n    priority = priority || LoaderPriority.NORMAL;\r\n    const loadItem = new LoadItem(path, priority, key, assetType);\r\n    loadItem.status = LoadItemStatus.IDLE;\r\n    const batch = new LoadBatch();\r\n    batch.then(callback);\r\n    ResLoader.add(loadItem, batch);\r\n    ResLoader.sortItems();\r\n    ResLoader.loadNext();\r\n  }\r\n\r\n  // 加载多个文件\r\n  public static loadMulti(lists: ILoadItemDesc[], callback: LoadCompleteCallback, priority?: LoaderPriority) {\r\n    const len: number = lists.length;\r\n    priority = priority || LoaderPriority.NORMAL;\r\n    const loadBatch = new LoadBatch();\r\n    loadBatch.then(callback);\r\n    for (let i = 0; i < len; i++) {\r\n      const loadItemDesc: ILoadItemDesc = lists[i];\r\n      const loadItem = new LoadItem(loadItemDesc.path, priority, loadItemDesc.key, loadItemDesc.assetType);\r\n      ResLoader.add(loadItem, loadBatch);\r\n    }\r\n    ResLoader.sortItems();\r\n    ResLoader.loadNext();\r\n  }\r\n\r\n  // 加载项列表\r\n  private static loadItems: LoadItem[] = [];\r\n\r\n  private static onItemComplete(loadItem: LoadItem, error: Error, resource: any) {\r\n    ResLoader.remove(loadItem, error, resource);\r\n  }\r\n\r\n  private static remove(loadItem: LoadItem, error: Error, resource: any) {\r\n    const idx = ResLoader.loadItems.indexOf(loadItem);\r\n    ResLoader.loadItems.splice(idx, 1);\r\n    if (loadItem.batch) {\r\n      loadItem.batch.remove(loadItem, error, resource);\r\n    }\r\n    ResLoader.tryCompleteWait(loadItem.path, error, resource);\r\n    loadItem.dispose();\r\n  }\r\n\r\n  // 如果当前有其他正在等待该资源的加载 则一并完成\r\n  private static tryCompleteWait(path: string, error: Error, resource: any) {\r\n    for (let i = 0; i < ResLoader.length; i++) {\r\n      const loadItem = ResLoader.loadItems[i];\r\n      if (loadItem.path === path && loadItem.status === LoadItemStatus.WAIT) {\r\n        ResLoader.onItemComplete(loadItem, error, resource);\r\n        // 这里之所以使用break 是因为这次找到的LoadItem会继续找相同的加载 所以这里break掉就可以了\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private static add(loadItem: LoadItem, batch: LoadBatch) {\r\n    loadItem.then(ResLoader.onItemComplete);\r\n    loadItem.additionIndex = batch.id;\r\n    batch.add(loadItem);\r\n\r\n    if (ResLoader.isLoading(loadItem.path)) {\r\n      loadItem.status = LoadItemStatus.WAIT;\r\n      loadItem.priority = LoaderPriority.AFTERMOST;\r\n      loadItem.additionIndex = -1;\r\n    }\r\n    ResLoader.loadItems.push(loadItem);\r\n  }\r\n\r\n  private static sortItems() {\r\n    ResLoader.insertSort(\"additionIndex\");\r\n    ResLoader.insertSort(\"priority\");\r\n  }\r\n\r\n  private static insertSort(prop: string) {\r\n    let tmpItem: LoadItem;\r\n    let i: number;\r\n    let j: number;\r\n    for (i = 1; i < ResLoader.loadItems.length; i ++) {\r\n      tmpItem = ResLoader.loadItems[i];\r\n      for (j = i - 1; j >= 0; j--) {\r\n        if (ResLoader.loadItems[j][prop] < tmpItem[prop]) {\r\n          ResLoader.loadItems[j + 1] = ResLoader.loadItems[j];\r\n          ResLoader.loadItems[j] = tmpItem;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private static loadNext() {\r\n    const loadItem: LoadItem = ResLoader.getNextItemToLoad();\r\n    if (loadItem) {\r\n      loadItem.load();\r\n      ResLoader.loadNext();\r\n    }\r\n  }\r\n\r\n  private static getNextItemToLoad(): LoadItem {\r\n    let i = 0;\r\n    while (i < ResLoader.loadItems.length) {\r\n      const loadItem: LoadItem = ResLoader.loadItems[i];\r\n      if (loadItem.status === LoadItemStatus.IDLE) {\r\n        return loadItem;\r\n      }\r\n      i ++;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private static isLoading(path: string): boolean {\r\n    let i = 0;\r\n    while (i < ResLoader.loadItems.length) {\r\n      if (ResLoader.loadItems[i].path === path) {\r\n        return true;\r\n      }\r\n      i++;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n"]}