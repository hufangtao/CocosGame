{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\dyGame\\component/assets\\scripts\\dyGame\\component\\ListView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\dyGame\\component","sourcesContent":["\r\nconst { ccclass, property, menu } = cc._decorator;\r\n@ccclass\r\n@menu('Component/ListView')\r\nexport default class ListView extends cc.Component {\r\n    @property(cc.ScrollView)\r\n    scrollView: cc.ScrollView = null;\r\n\r\n    @property(cc.String)\r\n    itemName: string = '';\r\n    @property(cc.String)\r\n    pfbRoot: string = '';\r\n\r\n    @property()\r\n    itemHeight: number = 0;\r\n    @property()\r\n    spawnCount: number = 0;\r\n    @property()\r\n    totalCount: number = 0;\r\n    @property()\r\n    spacing: number = 0;\r\n    @property()\r\n    updateInterval: number = 0;// 刷新时间\r\n    @property()\r\n    bufferZone: number = 0;\r\n\r\n    viewContent;\r\n    content;\r\n    items;\r\n    datas;\r\n    updateTimer;\r\n    lastContentPosY;\r\n    hadShowRank = false;\r\n\r\n    showRank(datas) {\r\n        this.totalCount = datas.length;\r\n        this.hadShowRank = true;\r\n        this.viewContent = this.scrollView.node.getChildByName('view');\r\n        this.content = this.scrollView.content;\r\n        this.items = []; // array to store spawned items\r\n        this.datas = datas;\r\n        this.initialize();\r\n        this.updateTimer = 0;\r\n        this.updateInterval = 0.1;\r\n        this.lastContentPosY = 0; // use this variable to detect if we are scrolling up or down\r\n        this.scrollView.scrollToTop(0);\r\n    }\r\n\r\n    initialize() {\r\n        this.content.height = this.totalCount * (this.itemHeight + this.spacing) + this.spacing; // get total content height\r\n        cc.loader.loadRes(this.pfbRoot + this.itemName, cc.Prefab, (err,prefab) => {\r\n            var itemCnt = this.spawnCount;\r\n            if(this.datas.length < this.spawnCount){\r\n                itemCnt = this.datas.length\r\n            }\r\n            for (let i = 0; i < itemCnt; ++i) { // spawn items, we only need to do this once\r\n                var nodItem = cc.instantiate(prefab)\r\n                nodItem.parent = this.content;\r\n                nodItem.setPosition(0, -this.itemHeight * (0.5 + i) - this.spacing * (i + 1));\r\n                nodItem.getComponent(this.itemName).updateItem(i, this.datas[i]);\r\n                this.items.push(nodItem);\r\n            }\r\n            // cc.loader.setAutoReleaseRecursively(prefab, true) \r\n        })\r\n    }\r\n\r\n    getPositionInView(item) { // get item position in scrollview's node space\r\n        if (!item.parent) {\r\n            return\r\n        }\r\n        let worldPos = item.parent.convertToWorldSpaceAR(item.position);\r\n        let viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);\r\n        return viewPos;\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this.hadShowRank) {\r\n            return\r\n        }\r\n        this.updateTimer += dt;\r\n        if (this.updateTimer < this.updateInterval) return; // we don't need to do the math every frame\r\n        this.updateTimer = 0;\r\n        let items = this.items;\r\n        let buffer = this.bufferZone + this.viewContent.height / 2;\r\n        let isDown = this.scrollView.content.y < this.lastContentPosY; // scrolling direction\r\n        let offset = (this.itemHeight + this.spacing) * items.length;\r\n        for (let i = 0; i < items.length; ++i) {\r\n            let viewPos = this.getPositionInView(items[i]);\r\n            if (viewPos) {\r\n                if (isDown) {\r\n                    // if away from buffer zone and not reaching top of content\r\n                    if (viewPos.y < -buffer && items[i].y + offset < 0) {\r\n                        items[i].y = (items[i].y + offset);\r\n                        let item = items[i].getComponent(this.itemName);\r\n                        let itemId = item.itemID - items.length;\r\n                        item.updateItem(itemId, this.datas[itemId]);\r\n                    }\r\n                } else {\r\n                    // if away from buffer zone and not reaching bottom of content\r\n                    if (viewPos.y > buffer && items[i].y - offset > -this.content.height) {\r\n                        items[i].y = (items[i].y - offset);\r\n                        let item = items[i].getComponent(this.itemName);\r\n                        let itemId = item.itemID + items.length;\r\n                        item.updateItem(itemId, this.datas[itemId]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // update lastContentPosY\r\n        this.lastContentPosY = this.scrollView.content.y;\r\n    }\r\n};\r\n"]}