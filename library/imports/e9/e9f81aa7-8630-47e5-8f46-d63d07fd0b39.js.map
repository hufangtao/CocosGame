{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\component\\page\\login/assets\\scripts\\app\\component\\page\\login\\PanelSelectServer.ts"],"names":[],"mappings":";;;;;AAAA,6CAAwC;AACxC,6DAA+D;AAC/D,2CAAsC;AACtC,mEAA8D;AAIxD,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAA+C,qCAAS;IADxD;QAAA,qEAuEG;QAlEM,eAAS,GAAY,IAAI,CAAC;QAG1B,iBAAW,GAAY,IAAI,CAAC;QAG5B,cAAQ,GAAY,IAAI,CAAE;QAG1B,cAAQ,GAAc,IAAI,CAAE;QAE3B,iBAAW,GAAW,IAAI,CAAC;QAE3B,cAAQ,GAAW,IAAI,CAAC;QAExB,eAAS,GAAQ,IAAI,CAAE;QAEvB,aAAO,GAAW,CAAC,CAAC;;IAiD5B,CAAC;IA9CQ,iCAAK,GAAZ;QAEE,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC;QAElD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QAEtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAE1E,KAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAG,CAAC,EAAE,EAAE;YAC1C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACrE,IAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,EAAE;gBAC1D,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;aACrB;SACA;IACH,CAAC;IAEM,uCAAW,GAAlB,UAAoB,UAAkB,EAAE,KAAa;QACjD,IAAM,OAAO,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,UAAU,CAAE;QACjG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;QAClC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,UAAS,KAAK;YAC1E,qBAAW,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAC;IAEf,CAAC;IAEM,wCAAY,GAAnB,UAAoB,KAAa;QAE/B,IAAM,QAAQ,GAAW,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAE/C,oBAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAI1B,CAAC;IAEM,sCAAU,GAAjB;QACE,qBAAW,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAhEH;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;wDACe;IAGjC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0DACiB;IAGnC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;uDACe;IAGjC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;uDACe;IAbhB,iBAAiB;QADrC,OAAO;OACa,iBAAiB,CAsEnC;IAAD,wBAAC;CAtEH,AAsEG,CAtE4C,mBAAS,GAsErD;kBAtEkB,iBAAiB","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\component\\page\\login","sourcesContent":["import BasePanel from \"../../BasePanel\";\r\nimport * as ConfigVO from \"../../../common/config/vo/ConfigVO\";\r\nimport AccManager from \"./AccManager\";\r\nimport GamePersist from \"../../../common/persist/GamePersist\";\r\n\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PanelSelectServer extends BasePanel {\r\n  \r\n\r\n  @property(cc.Node)\r\n  public panelNode: cc.Node = null;\r\n\r\n  @property(cc.Node)\r\n  public contentNode: cc.Node = null;\r\n\r\n  @property(cc.Node)\r\n  public rootNode: cc.Node = null ;\r\n\r\n  @property(cc.Button)\r\n  public closeBtn: cc.Button = null ;\r\n\r\n  private serverGroup: string = null;\r\n\r\n  private groupLen: number = null;\r\n\r\n  private grouplist: any = null ;\r\n\r\n  private default: number = 0;\r\n\r\n\r\n    public start() {\r\n\r\n      this.serverGroup = window['Partner'].SERVER_GROUP;\r\n\r\n      this.grouplist = ConfigVO.ServerList.getExtra(\"group_list\")[this.serverGroup];\r\n      this.groupLen = this.grouplist.length;\r\n\r\n      this.closeBtn.node.on(cc.Node.EventType.TOUCH_END, this.onCloseBtn, this);\r\n\r\n      for ( let i = 0; i < this.groupLen ; i++) {\r\n      this.createPanel(ConfigVO.ServerList.get(this.grouplist[i]).name, i);\r\n      if ( ConfigVO.ServerList.get(this.grouplist[i]).default === 1) {\r\n           this.default = i;\r\n      }\r\n      }\r\n    }\r\n\r\n    public createPanel( serverName: string, index: number) {\r\n        const newNode = cc.instantiate(this.panelNode);\r\n        newNode.active = true;\r\n        newNode.getChildByName(\"btn\").getChildByName(\"name\").getComponent(cc.Label).string = serverName ;\r\n        newNode.parent = this.contentNode;\r\n        const self = this;\r\n        newNode.getChildByName(\"btn\").on(cc.Node.EventType.TOUCH_END, function(event) {\r\n          GamePersist.INSTANCE.btnAudio_1();\r\n          self.switchServer(index); \r\n          }, this);\r\n\r\n    }\r\n\r\n    public switchServer(index: number) {\r\n      \r\n      const serverID: string = this.grouplist[index];\r\n\r\n      AccManager.INSTANCE.setServerData(serverID);\r\n      this.rootNode.destroy();\r\n      \r\n      \r\n\r\n    }\r\n\r\n    public onCloseBtn() {\r\n      GamePersist.INSTANCE.btnAudio_1();\r\n      this.rootNode.destroy();\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n"]}