{"version":3,"sources":["UIObjective.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\ui","sourcesContent":["import LayerGamePve from \"../component/game/pve/LayerGamePve\";\r\nimport { Play } from \"../module/Modules\";\r\nimport { UIFunc } from \"../common/UIFunc\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIObjective extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    nodContent: cc.Node = null;\r\n\r\n    layerGame: LayerGamePve;\r\n\r\n    onLoad() {\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    // 设置开局提示面板\r\n    initObjective(layerGame) {\r\n        this.layerGame = layerGame;\r\n        let panelHeader = this.layerGame.panelHeader;\r\n        this.nodContent.stopAllActions();\r\n        this.nodContent.x = -720;\r\n        var nodObjectives = this.nodContent.getChildByName('nodObjectives');\r\n        for (let i = 0; i < nodObjectives.children.length; ++i) {\r\n            nodObjectives.children[i].active = false;\r\n        }\r\n        var count = 0;\r\n        for (let i = 0; i < panelHeader.nodObjective.children.length; ++i) {\r\n            if (panelHeader.nodObjective.children[i].active) {\r\n                count++;\r\n                nodObjectives.children[i].active = true;\r\n                var node = cc.instantiate(panelHeader.nodObjective.children[i].getChildByName('sprite').children[0]);\r\n                nodObjectives.children[i].getChildByName('sprite').destroyAllChildren();\r\n                node.parent = nodObjectives.children[i].getChildByName('sprite');\r\n                nodObjectives.children[i].getChildByName('labObjective').getComponent(cc.Label).string =\r\n                    panelHeader.nodObjective.children[i].getChildByName('labObjective').getComponent(cc.Label).string;\r\n\r\n                nodObjectives.children[i].getChildByName('ban').active = panelHeader.nodObjective.children[i].getChildByName('ban').active;\r\n                nodObjectives.children[i].getChildByName('arrow').active = panelHeader.nodObjective.children[i].getChildByName('arrow').active;\r\n                nodObjectives.children[i].getChildByName('question').active = panelHeader.nodObjective.children[i].getChildByName('question').active;\r\n                nodObjectives.children[i].getChildByName('sprite').active = panelHeader.nodObjective.children[i].getChildByName('sprite').active;\r\n                nodObjectives.children[i].getChildByName('labObjective').active = panelHeader.nodObjective.children[i].getChildByName('labObjective').active;\r\n            }\r\n        }\r\n        if (count == 1) {\r\n            nodObjectives.width = 150;\r\n            // nodObjectives.children[0].x = 0;\r\n        } else {\r\n            nodObjectives.width = 300;\r\n        }\r\n    }\r\n    // 提示面板动画\r\n    panelObjectiveAction() {\r\n        var action = cc.sequence(\r\n            cc.moveTo(0.5, 20, 0),\r\n            cc.moveTo(0.2, 0, 0),\r\n            cc.delayTime(1),\r\n            cc.moveTo(0.5, 720, 0),\r\n            cc.callFunc(() => {\r\n                if (!Play.DataPve.isTimeLevel) {\r\n                    Play.DataPve.gameBegan = true;\r\n                }\r\n                UIFunc.closeUI('UIObjective',()=>{});\r\n                this.layerGame.panelGuide.getComponent('panelGuidePve').showGuide();\r\n            })\r\n        )\r\n        this.nodContent.runAction(action);\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}