{"version":3,"sources":["BaseConfig.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\common\\config","sourcesContent":["import { ISparseArr, ILvlDataGenerator } from \"../Misc\";\r\n\r\nconst defaultLvlGenerator = {\r\n  updateLvlData(template: any, lvl: number) {\r\n    return template;\r\n  },\r\n};\r\n\r\n// 策划配置数据的泛型类\r\nexport default class BaseConfig<T> {\r\n  public isInited: boolean = false;\r\n\r\n  private data: ISparseArr<T> = [];\r\n  private extraData: ISparseArr<T> = undefined;\r\n  private lvlGenerator: ILvlDataGenerator<T> = undefined;\r\n  private name: string;\r\n  private clazz: new() => T;\r\n\r\n  constructor(name: string) {\r\n    this.name = name;\r\n  }\r\n\r\n  public setClass(clazz: any) {\r\n    this.clazz = clazz || function() {};\r\n  }\r\n\r\n  public initData(obj: any) {\r\n    if (!obj) {\r\n      return;\r\n    }\r\n    const keys: any[] = obj.key;\r\n    const data: any[] = obj.vals;\r\n    const cols: any[] = obj.cols;\r\n    obj.key = undefined;\r\n    obj.vals = undefined;\r\n    obj.cols = undefined;\r\n\r\n    const keyCnt = keys.length;\r\n    const colCnt = cols.length;\r\n    const clazz = this.clazz;\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      const item = data[i];\r\n      // 计算本条数据的索引\r\n      let key: string = item[keys[0]];\r\n      for (let j = 1; j < keyCnt; j++) {\r\n        key += (\"_\" + item[keys[j]]);\r\n      }\r\n      // 将数据转换成一个对象实例\r\n      const instance: any = new clazz();\r\n      for (let j = 0; j < colCnt; j++) {\r\n        const colName: string = cols[j] as string;\r\n        instance[colName] = item[j];\r\n      }\r\n      // 如果对应的key已经存在一个值了 就把数据放在一个数组里\r\n      const existedValue = this.data[key];\r\n      if (existedValue) {\r\n        if (Array.prototype === existedValue.__proto__) {\r\n          existedValue.push(instance);\r\n        } else {\r\n          this.data[key] = instance;\r\n        }\r\n      } else {\r\n        this.data[key] = instance;\r\n      }\r\n      this.isInited = true;\r\n    }\r\n\r\n    // 其他属性保持在extra里面\r\n    for (const k in obj) {\r\n      if (obj[k] !== undefined) {\r\n        if (!this.extraData) {\r\n          this.extraData = {};\r\n        }\r\n        this.extraData[k] = obj[k];\r\n      }\r\n    }\r\n  }\r\n\r\n  public get(...params): T {\r\n    const key = params.join(\"_\");\r\n    return this.data[key] as T;\r\n  }\r\n\r\n  public getGroup(...params): T[] {\r\n    const key = params.join(\"_\");\r\n    return this.data[key] as T[];\r\n  }\r\n\r\n  public getAll(): ISparseArr<T> {\r\n    return this.data;\r\n  }\r\n\r\n  public getList(): T[] {\r\n    let tmp;\r\n    tmp = this.data;\r\n    return tmp;\r\n  }\r\n\r\n  // 获取额外数据\r\n  public getExtra(key: string) {\r\n    return this.extraData[key];\r\n  }\r\n\r\n  // 设置额外数据\r\n  public setExtra(key: string, value: any) {\r\n    this.extraData[key] = value;\r\n  }\r\n\r\n  // 设置等级数据生成器\r\n  public setLvlGenerator(generator: ILvlDataGenerator<T>) {\r\n    this.lvlGenerator = generator;\r\n  }\r\n\r\n  // 根据等级获取数据\r\n  public getByLvl(id: number, lvl: number): T {\r\n    const key = id + \"_\" + lvl;\r\n    let keyValue = this.data[key];\r\n    const generator = this.lvlGenerator || defaultLvlGenerator;\r\n    // 对应等级的数据没有，则去找其他等级的，然后根据生成规则计算出本等级的数值\r\n    if (keyValue === undefined) {\r\n      const originLvl = lvl;\r\n      // 直到找到一个有对应等级的配置的数据\r\n      let tmpKey;\r\n      while (!keyValue && lvl > 0) {\r\n        lvl --;\r\n        tmpKey = id + \"_\" + lvl;\r\n        keyValue = this.data[tmpKey];\r\n      }\r\n      // 如果找到了其他等级的值，就可以根据设定计算出来了\r\n      if (keyValue) {\r\n        const wantedKeyValue = generator.updateLvlData(keyValue, originLvl);\r\n        this.data[key] = wantedKeyValue;\r\n        keyValue = wantedKeyValue;\r\n      } else {\r\n        this.data[key] = null;\r\n      }\r\n      // 然后再计算一下中间等级数据 下次查找可以快一些\r\n      const midLvl = Math.ceil((originLvl + lvl) / 2);\r\n      if (midLvl !== lvl && midLvl !== originLvl) {\r\n        const midKey = id + \"_\" + midLvl;\r\n        const midKeyValue = keyValue ? generator.updateLvlData(keyValue, midLvl) : null;\r\n        this.data[midKey] = midKeyValue;\r\n      }\r\n    }\r\n    return keyValue;\r\n  }\r\n}\r\n"]}