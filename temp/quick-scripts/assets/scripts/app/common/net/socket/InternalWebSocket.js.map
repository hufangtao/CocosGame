{"version":3,"sources":["InternalWebSocket.ts"],"names":[],"mappings":";;;;;AAAA;IAAA;QAQU,SAAI,GAAW,EAAE,CAAC;QAClB,SAAI,GAAW,CAAC,CAAC;IAmE3B,CAAC;IAjEQ,wCAAY,GAAnB,UAAoB,SAAqB,EACrB,OAAmB,EACnB,YAAiC,EACjC,OAAmB,EACnB,OAAY;QAE9B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;IAC5B,CAAC;IAEM,mCAAO,GAAd,UAAe,IAAY,EAAE,IAAY;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAM,eAAe,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9D,IAAI,CAAC,MAAM,GAAG,IAAI,SAAS,CAAC,eAAe,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,aAAa,CAAC;QACvC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAEM,wCAAY,GAAnB,UAAoB,GAAW;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,aAAa,CAAC;QACvC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAEM,gCAAI,GAAX,UAAY,OAAY;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAEM,iCAAK,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAEO,sCAAU,GAAlB;QACE,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAE3B,MAAM,CAAC,MAAM,GAAG;YACd,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACtC;QACH,CAAC,CAAC;QAEF,MAAM,CAAC,OAAO,GAAG;YACf,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACpC;QACH,CAAC,CAAC;QAEF,MAAM,CAAC,OAAO,GAAG;YACf,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACpC;QACH,CAAC,CAAC;QAEF,MAAM,CAAC,SAAS,GAAG,UAAS,CAAC;YAC3B,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;aACjD;QACH,CAAC,CAAC;IACJ,CAAC;IACH,wBAAC;AAAD,CA5EA,AA4EC,IAAA","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\common\\net\\socket","sourcesContent":["export default class InternalWebScoket {\r\n  private socket: WebSocket;\r\n\r\n  private onConnect: () => void;\r\n  private onClose: () => void;\r\n  private onSocketData: (data: any) => void;\r\n  private onError: () => void;\r\n  private thisObject: any;\r\n  private host: string = \"\";\r\n  private port: number = 0;\r\n\r\n  public addCallbacks(onConnect: () => void,\r\n                      onClose: () => void,\r\n                      onSocketData: (data: any) => void,\r\n                      onError: () => void,\r\n                      thisObj: any): void {\r\n\r\n    this.onConnect = onConnect;\r\n    this.onClose = onClose;\r\n    this.onSocketData = onSocketData;\r\n    this.onError = onError;\r\n    this.thisObject = thisObj;\r\n  }\r\n\r\n  public connect(host: string, port: number): void {\r\n    this.port = port;\r\n    this.host = host;\r\n\r\n    const socketServerUrl = \"ws://\" + this.host + \":\" + this.port;\r\n    this.socket = new WebSocket(socketServerUrl);\r\n    this.socket.binaryType = \"arraybuffer\";\r\n    this._bindEvent();\r\n  }\r\n\r\n  public connectByUrl(url: string): void {\r\n    this.socket = new WebSocket(url);\r\n    this.socket.binaryType = \"arraybuffer\";\r\n    this._bindEvent();\r\n  }\r\n\r\n  public send(message: any): void {\r\n    this.socket.send(message);\r\n  }\r\n\r\n  public close(): void {\r\n    this.socket.close();\r\n  }\r\n\r\n  private _bindEvent(): void {\r\n    const that = this;\r\n    const socket = this.socket;\r\n\r\n    socket.onopen = function() {\r\n      if (that.onConnect) {\r\n        that.onConnect.call(that.thisObject);\r\n      }\r\n    };\r\n\r\n    socket.onclose = function() {\r\n      if (that.onClose) {\r\n        that.onClose.call(that.thisObject);\r\n      }\r\n    };\r\n\r\n    socket.onerror = function() {\r\n      if (that.onError) {\r\n        that.onError.call(that.thisObject);\r\n      }\r\n    };\r\n\r\n    socket.onmessage = function(e) {\r\n      if (that.onSocketData) {\r\n        that.onSocketData.call(that.thisObject, e.data);\r\n      }\r\n    };\r\n  }\r\n}\r\n"]}