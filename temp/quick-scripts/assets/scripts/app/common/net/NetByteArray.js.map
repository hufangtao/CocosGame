{"version":3,"sources":["NetByteArray.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\common\\net","sourcesContent":["// 字段大小端定义\r\nexport class Endian {\r\n  public static ENDIAN_LITTLE: string = \"littleEndian\";\r\n  public static ENDIAN_BIG: string = \"bigEndian\";\r\n}\r\n\r\n// 字段大小端枚举\r\nexport const enum EndianConst {\r\n  ENDIAN_LITTLE = 0,\r\n  ENDIAN_BIG = 1,\r\n}\r\n\r\n// 类型字节大小\r\nconst enum ByteArraySize {\r\n  SIZE_OF_BOOLEAN = 1,\r\n  SIZE_OF_INT8 = 1,\r\n  SIZE_OF_INT16 = 2,\r\n  SIZE_OF_INT32 = 4,\r\n  SIZE_OF_UINT8 = 1,\r\n  SIZE_OF_UINT16 = 2,\r\n  SIZE_OF_UINT32 = 4,\r\n  SIZE_OF_FLOAT32 = 4,\r\n  SIZE_OF_FLOAT64 = 8,\r\n}\r\n\r\nexport class ByteArray {\r\n  protected bufferExtSize = 0;\r\n  protected data: DataView;\r\n  protected bufBytes: Uint8Array;\r\n  protected curPosition: number;\r\n  protected writePosition: number; // 已经使用的字节偏移\r\n  protected $endian: EndianConst;  // 字节大小端\r\n  protected $isLittleEndian: boolean;\r\n\r\n  private EOF_BYTE: number = -1;\r\n  private EOF_CODE_POINT: number = -1;\r\n\r\n  public get endian() {\r\n    return this.$endian === EndianConst.ENDIAN_LITTLE ? Endian.ENDIAN_LITTLE : Endian.ENDIAN_BIG;\r\n  }\r\n  public set endian(value: string) {\r\n    this.$endian = value === Endian.ENDIAN_LITTLE ? EndianConst.ENDIAN_LITTLE : EndianConst.ENDIAN_BIG;\r\n    this.$isLittleEndian = this.$endian === EndianConst.ENDIAN_LITTLE;\r\n  }\r\n\r\n  constructor(buffer?: Uint8Array | ArrayBuffer, bufExtSize = 0) {\r\n    if (bufExtSize < 0) {\r\n      bufExtSize = 0;\r\n    }\r\n    this.bufferExtSize = bufExtSize;\r\n\r\n    let bytes: Uint8Array;\r\n    let wpos = 0;\r\n    if (buffer) {\r\n      let arrUnit8: Uint8Array;\r\n      if (buffer instanceof Uint8Array) {\r\n        arrUnit8 = buffer;\r\n        wpos = buffer.length;\r\n      } else {\r\n        // 获取uint8 array的视图\r\n        arrUnit8 = new Uint8Array(buffer);\r\n        wpos = buffer.byteLength;\r\n      }\r\n      // 计算bytes\r\n      if (bufExtSize === 0) {\r\n        bytes = new Uint8Array(wpos);\r\n      } else {\r\n        const multi = ((wpos / bufExtSize) | 0) + 1;\r\n        bytes = new Uint8Array(bufExtSize * multi);\r\n      }\r\n      // 拷贝已有的数据\r\n      bytes.set(arrUnit8);\r\n    } else {\r\n      bytes = new Uint8Array(bufExtSize);\r\n    }\r\n\r\n    this.writePosition = wpos;\r\n    this.curPosition = 0;\r\n    this.bufBytes = bytes;\r\n    this.data = new DataView(bytes.buffer);\r\n    this.endian = Endian.ENDIAN_BIG;\r\n  }\r\n\r\n  public get readAvailable() {\r\n    return this.writePosition - this.curPosition;\r\n  }\r\n\r\n  public get buffer(): ArrayBuffer {\r\n    return this.data.buffer.slice(0, this.writePosition);\r\n  }\r\n\r\n  public set buffer(value: ArrayBuffer) {\r\n    const wpos = value.byteLength;\r\n    const arrUnit8 = new Uint8Array(value);\r\n    const bufExtSize = this.bufferExtSize;\r\n    let bytes: Uint8Array;\r\n\r\n    if (bufExtSize === 0) {\r\n      bytes = new Uint8Array(wpos);\r\n    } else {\r\n      const multi = (wpos / bufExtSize | 0) + 1;\r\n      bytes = new Uint8Array(multi * bufExtSize);\r\n    }\r\n    bytes.set(arrUnit8);\r\n    this.writePosition = wpos;\r\n    this.bufBytes = bytes;\r\n    this.data = new DataView(bytes.buffer);\r\n  }\r\n\r\n  public get rawBuffer(): ArrayBuffer {\r\n    return this.data.buffer;\r\n  }\r\n\r\n  public get bytes(): Uint8Array {\r\n    return this.bufBytes;\r\n  }\r\n\r\n  public get dataView(): DataView {\r\n    return this.data;\r\n  }\r\n\r\n  public get bufferOffset(): number {\r\n    return this.data.byteOffset;\r\n  }\r\n\r\n  public get position(): number {\r\n    return this.curPosition;\r\n  }\r\n\r\n  public set position(value: number) {\r\n    this.curPosition = value;\r\n    if (value > this.writePosition) {\r\n      this.writePosition = value;\r\n    }\r\n  }\r\n\r\n  public get length(): number {\r\n    return this.writePosition;\r\n  }\r\n\r\n  public set length(value: number) {\r\n    this.writePosition = value;\r\n    if (this.data.byteLength > value) {\r\n      this.curPosition = value;\r\n    }\r\n\r\n    this._validateBuffer(value);\r\n  }\r\n\r\n  public get bytesAvailable(): number {\r\n    return this.data.byteLength - this.curPosition;\r\n  }\r\n\r\n  public clear(): void {\r\n    const buffer = new ArrayBuffer(this.bufferExtSize);\r\n    this.data = new DataView(buffer);\r\n    this.bufBytes = new Uint8Array(buffer);\r\n    this.curPosition = 0;\r\n    this.writePosition = 0;\r\n  }\r\n\r\n  public validate(len: number): boolean {\r\n    const bl = this.bufBytes.length;\r\n    if (bl > 0 && this.curPosition + len <= bl) {\r\n      return true;\r\n    } else {\r\n      DyGame.$error(1);\r\n    }\r\n  }\r\n\r\n  public readBoolean(): boolean {\r\n    if (this.validate(ByteArraySize.SIZE_OF_BOOLEAN)) {\r\n      return !!this.bufBytes[this.position++];\r\n    }\r\n  }\r\n\r\n  public readByte(): number {\r\n    if (this.validate(ByteArraySize.SIZE_OF_INT8)) {\r\n      return this.data.getInt8(this.position++);\r\n    }\r\n  }\r\n\r\n  // 读取字节内容 并写入到目标缓存\r\n  public readBytes(dstBuffer: ByteArray, offset: number = 0, length: number = 0): void {\r\n    if (!dstBuffer) {\r\n      return;\r\n    }\r\n\r\n    const pos = this.curPosition;\r\n    const available = this.writePosition - pos;\r\n    if (available < 0) {\r\n      DyGame.$error(1);\r\n      return;\r\n    }\r\n    if (length === 0) {\r\n      length = available;\r\n    } else if (length > available) {\r\n      DyGame.$error(1);\r\n      return;\r\n    }\r\n\r\n    const position = dstBuffer.curPosition;\r\n    dstBuffer.curPosition = 0; // 此处设为0 是想dstBuffer的长度就是offset + length\r\n    dstBuffer.validateBuffer(offset + length);\r\n    dstBuffer.curPosition = position;\r\n    dstBuffer.bufBytes.set(this.bufBytes.subarray(pos, pos + length), offset); // 拷贝字节\r\n\r\n    this.position += length; // 修改读取游标\r\n  }\r\n\r\n  public readDouble(): number {\r\n    const low = this.readUnsignedInt();\r\n    const high = this.readUnsignedInt();\r\n    return low * 0x100000000 + high;\r\n  }\r\n\r\n  public readFloat(): number {\r\n    if (this.validate(ByteArraySize.SIZE_OF_FLOAT32)) {\r\n      const value = this.data.getFloat32(this.curPosition, this.$isLittleEndian);\r\n      this.position += ByteArraySize.SIZE_OF_FLOAT32;\r\n      return value;\r\n    }\r\n  }\r\n\r\n  public readInt(): number {\r\n    if (this.validate(ByteArraySize.SIZE_OF_INT32)) {\r\n      const value = this.data.getInt32(this.curPosition, this.$isLittleEndian);\r\n      this.position += ByteArraySize.SIZE_OF_INT32;\r\n      return value;\r\n    }\r\n  }\r\n\r\n  public readShort(): number {\r\n    if (this.validate(ByteArraySize.SIZE_OF_INT16)) {\r\n      const value = this.data.getInt16(this.curPosition, this.$isLittleEndian);\r\n      this.position += ByteArraySize.SIZE_OF_INT16;\r\n      return value;\r\n    }\r\n  }\r\n\r\n  public readUnsignedByte(): number {\r\n    if (this.validate(ByteArraySize.SIZE_OF_UINT8)) {\r\n      return this.bufBytes[this.position++];\r\n    }\r\n  }\r\n\r\n  public readUnsignedInt(): number {\r\n    if (this.validate(ByteArraySize.SIZE_OF_UINT32)) {\r\n      const value = this.data.getUint32(this.position, this.$isLittleEndian);\r\n      this.position += ByteArraySize.SIZE_OF_UINT32;\r\n      return value;\r\n    }\r\n  }\r\n\r\n  public readUnsignedShort(): number {\r\n    if (this.validate(ByteArraySize.SIZE_OF_UINT16)) {\r\n      const value = this.data.getUint16(this.position, this.$isLittleEndian);\r\n      this.position += ByteArraySize.SIZE_OF_UINT16;\r\n      return value;\r\n    }\r\n  }\r\n\r\n  public readUTF(): string {\r\n    const length = this.readUnsignedShort();\r\n    if (length > 0) {\r\n      return this.readUTFBytes(length);\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  public readUTFBytes(length: number): string {\r\n    if (!this.validate(length)) {\r\n      return;\r\n    }\r\n    const data = this.data;\r\n    const bytes = new Uint8Array(data.buffer, data.byteOffset + this.curPosition, length);\r\n    this.position += length;\r\n    return this.decodeUTF8(bytes);\r\n  }\r\n\r\n  public writeBoolean(value: boolean): void {\r\n    this.validateBuffer(ByteArraySize.SIZE_OF_BOOLEAN);\r\n    this.bufBytes[this.position++] = +value;\r\n  }\r\n\r\n  public writeByte(value: number): void {\r\n    this.validateBuffer(ByteArraySize.SIZE_OF_INT8);\r\n    this.bufBytes[this.position++] = value & 0xff;\r\n  }\r\n\r\n  public writeBytes(bytesArr: ByteArray, offset: number, length: number): void {\r\n    let writeLength: number;\r\n    if (offset < 0) {\r\n      return;\r\n    }\r\n    if (length < 0) {\r\n      return;\r\n    }\r\n\r\n    if (length === 0) {\r\n      writeLength = bytesArr.length - offset;\r\n    } else {\r\n      writeLength = Math.min(bytesArr.length - offset, length);\r\n    }\r\n\r\n    if (writeLength > 0) {\r\n      this.validateBuffer(writeLength);\r\n      this.bufBytes.set(bytesArr.bufBytes.subarray(offset, writeLength), this.curPosition);\r\n      this.position = this.curPosition + writeLength;\r\n    }\r\n  }\r\n\r\n  public writeDouble(value: number): void {\r\n    const low = Math.floor(value / 0x100000000);\r\n    this.writeUnsignedInt(low);\r\n    this.writeUnsignedInt(((value & 0xffffffff) >>> 0));\r\n  }\r\n\r\n  public writeFloat(value: number): void {\r\n    this.validateBuffer(ByteArraySize.SIZE_OF_FLOAT32);\r\n    this.data.setFloat32(this.curPosition, value, this.$isLittleEndian);\r\n    this.position += ByteArraySize.SIZE_OF_FLOAT32;\r\n  }\r\n\r\n  public writeInt(value: number): void {\r\n    this.validateBuffer(ByteArraySize.SIZE_OF_INT32);\r\n    this.data.setInt32(this.curPosition, value, this.$isLittleEndian);\r\n    this.position += ByteArraySize.SIZE_OF_INT32;\r\n  }\r\n\r\n  public writeShort(value: number): void {\r\n    this.validateBuffer(ByteArraySize.SIZE_OF_INT16);\r\n    this.data.setInt16(this.curPosition, value, this.$isLittleEndian);\r\n    this.position += ByteArraySize.SIZE_OF_INT16;\r\n  }\r\n\r\n  public writeUnsignedInt(value: number): void {\r\n    this.validateBuffer(ByteArraySize.SIZE_OF_UINT32);\r\n    this.data.setUint32(this.curPosition, value, this.$isLittleEndian);\r\n    this.position += ByteArraySize.SIZE_OF_UINT32;\r\n  }\r\n\r\n  public writeUnsignedShort(value: number): void {\r\n    this.validateBuffer(ByteArraySize.SIZE_OF_UINT16);\r\n    this.data.setUint16(this.curPosition, value, this.$isLittleEndian);\r\n    this.position += ByteArraySize.SIZE_OF_UINT16;\r\n  }\r\n\r\n  public writeUTF(value: string): void {\r\n    const utf8Bytes: ArrayLike<number> = this.encodeUTF8(value);\r\n    const length: number = utf8Bytes.length;\r\n    this.validateBuffer(ByteArraySize.SIZE_OF_UINT16 + length);\r\n    this.data.setUint16(this.curPosition, length, this.$isLittleEndian);\r\n    this.position += ByteArraySize.SIZE_OF_UINT16;\r\n    this._writeUint8Array(utf8Bytes, false);\r\n  }\r\n\r\n  public writeUTFBytes(value: string): void {\r\n    this._writeUint8Array(this.encodeUTF8(value));\r\n  }\r\n\r\n  public toString(): string {\r\n    return \"[ByteArray] length:\" + this.length + \", bytesAvailable:\" + this.bytesAvailable;\r\n  }\r\n\r\n  public _writeUint8Array(bytes: Uint8Array | ArrayLike<number>, validateBuffer: boolean = true): void {\r\n    const pos = this.curPosition;\r\n    const npos = pos + bytes.length;\r\n    if (validateBuffer) {\r\n      this.validateBuffer(npos);\r\n    }\r\n    this.bytes.set(bytes, pos);\r\n    this.position = npos;\r\n  }\r\n\r\n  protected validateBuffer(len: number): void {\r\n    // this.writePosition = len > this.writePosition ? len : this.writePosition;\r\n    this.writePosition = Math.max(this.writePosition, len);\r\n    len += this.curPosition;\r\n    this._validateBuffer(len);\r\n  }\r\n\r\n  protected _validateBuffer(value: number) {\r\n    if (this.data.byteLength < value) {\r\n      const bufExt = this.bufferExtSize;\r\n      let tmp: Uint8Array;\r\n      if (bufExt === 0) {\r\n        tmp = new Uint8Array(value);\r\n      } else {\r\n        const nLen = (((value / bufExt) >> 0) + 1) * bufExt;\r\n        tmp = new Uint8Array(nLen);\r\n      }\r\n      tmp.set(this.bufBytes);\r\n      this.bufBytes = tmp;\r\n      this.data = new DataView(tmp.buffer);\r\n    }\r\n  }\r\n\r\n  private inRange(a, min, max) {\r\n    return min <= a && a <= max;\r\n  }\r\n\r\n  private div(n, d) {\r\n    return Math.floor(n / d);\r\n  }\r\n\r\n  private encoderError(codePoint) {\r\n    DyGame.$error(1026, codePoint);\r\n  }\r\n\r\n  private decoderError(fatal, optCodePoint?): number {\r\n    if (fatal) {\r\n      DyGame.$error(1);\r\n    }\r\n    return optCodePoint || 0xFFFD;\r\n  }\r\n\r\n  private encodeUTF8(str: string): Uint8Array {\r\n    let pos: number = 0;\r\n    const codePoints = this.stringToCodePoints(str);\r\n    const outputBytes = [];\r\n\r\n    while (codePoints.length > pos) {\r\n      const codePoint: number = codePoints[pos++];\r\n\r\n      if (this.inRange(codePoint, 0xD800, 0xDFFF)) {\r\n        this.encoderError(codePoint);\r\n      } else if (this.inRange(codePoint, 0x0000, 0x007f)) {\r\n        outputBytes.push(codePoint);\r\n      } else {\r\n        let count;\r\n        let offset;\r\n        if (this.inRange(codePoint, 0x0080, 0x07FF)) {\r\n          count = 1;\r\n          offset = 0xC0;\r\n        } else if (this.inRange(codePoint, 0x0800, 0xFFFF)) {\r\n          count = 2;\r\n          offset = 0xE0;\r\n        } else if (this.inRange(codePoint, 0x10000, 0x10FFFF)) {\r\n          count = 3;\r\n          offset = 0xF0;\r\n        }\r\n\r\n        outputBytes.push(this.div(codePoint, Math.pow(64, count)) + offset);\r\n\r\n        while (count > 0) {\r\n          const temp = this.div(codePoint, Math.pow(64, count - 1));\r\n          outputBytes.push(0x80 + (temp % 64));\r\n          count -= 1;\r\n        }\r\n      }\r\n    }\r\n    return new Uint8Array(outputBytes);\r\n  }\r\n\r\n  private decodeUTF8(data: Uint8Array): string {\r\n    const fatal: boolean = false;\r\n    let pos: number = 0;\r\n    let result: string = \"\";\r\n    let codePoint: number;\r\n    let utf8CodePoint = 0;\r\n    let utf8BytesNeeded = 0;\r\n    let utf8BytesSeen = 0;\r\n    let utf8LowerBoundary = 0;\r\n\r\n    while (data.length > pos) {\r\n      const curByte = data[pos++];\r\n\r\n      if (curByte === this.EOF_BYTE) {\r\n        if (utf8BytesNeeded !== 0) {\r\n          codePoint = this.decoderError(fatal);\r\n        } else {\r\n          codePoint = this.EOF_CODE_POINT;\r\n        }\r\n      } else {\r\n\r\n        if (utf8BytesNeeded === 0) {\r\n          if (this.inRange(curByte, 0x00, 0x7F)) {\r\n            codePoint = curByte;\r\n          } else {\r\n            if (this.inRange(curByte, 0xC2, 0xDF)) {\r\n              utf8BytesNeeded = 1;\r\n              utf8LowerBoundary = 0x80;\r\n              utf8CodePoint = curByte - 0xC0;\r\n            } else if (this.inRange(curByte, 0xE0, 0xEF)) {\r\n              utf8BytesNeeded = 2;\r\n              utf8LowerBoundary = 0x800;\r\n              utf8CodePoint = curByte - 0xE0;\r\n            } else if (this.inRange(curByte, 0xF0, 0xF4)) {\r\n              utf8BytesNeeded = 3;\r\n              utf8LowerBoundary = 0x10000;\r\n              utf8CodePoint = curByte - 0xF0;\r\n            } else {\r\n              this.decoderError(fatal);\r\n            }\r\n            utf8CodePoint = utf8CodePoint * Math.pow(64, utf8BytesNeeded);\r\n            codePoint = null;\r\n          }\r\n        } else if (!this.inRange(curByte, 0x80, 0xBF)) {\r\n          utf8CodePoint = 0;\r\n          utf8BytesNeeded = 0;\r\n          utf8BytesSeen = 0;\r\n          utf8LowerBoundary = 0;\r\n          pos--;\r\n          codePoint = this.decoderError(fatal, curByte);\r\n        } else {\r\n\r\n          utf8BytesSeen += 1;\r\n          utf8CodePoint = utf8CodePoint + (curByte - 0x80) * Math.pow(64, utf8BytesNeeded - utf8BytesSeen);\r\n\r\n          if (utf8BytesSeen !== utf8BytesNeeded) {\r\n            codePoint = null;\r\n          } else {\r\n            const cp = utf8CodePoint;\r\n            const lowerBoundary = utf8LowerBoundary;\r\n            utf8CodePoint = 0;\r\n            utf8BytesNeeded = 0;\r\n            utf8BytesSeen = 0;\r\n            utf8LowerBoundary = 0;\r\n            if (this.inRange(cp, lowerBoundary, 0x10FFFF) && !this.inRange(cp, 0xD800, 0xDFFF)) {\r\n              codePoint = cp;\r\n            } else {\r\n              codePoint = this.decoderError(fatal, curByte);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Decode string\r\n      if (codePoint !== null && codePoint !== this.EOF_CODE_POINT) {\r\n        if (codePoint <= 0xFFFF) {\r\n          if (codePoint > 0) {\r\n            result += String.fromCharCode(codePoint);\r\n          }\r\n        } else {\r\n          codePoint -= 0x10000;\r\n          result += String.fromCharCode(0xD800 + ((codePoint >> 10) & 0x3ff));\r\n          result += String.fromCharCode(0xDC00 + (codePoint & 0x3ff));\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private stringToCodePoints(content: string) {\r\n    /** @type {Array.<number>} */\r\n    const cps = [];\r\n    // Based on http://www.w3.org/TR/WebIDL/#idl-DOMString\r\n    let i = 0;\r\n    const n = content.length;\r\n    while (i < content.length) {\r\n      const c = content.charCodeAt(i);\r\n      if (!this.inRange(c, 0xD800, 0xDFFF)) {\r\n        cps.push(c);\r\n      } else if (this.inRange(c, 0xDC00, 0xDFFF)) {\r\n        cps.push(0xFFFD);\r\n      } else { // (inRange(c, 0xD800, 0xDBFF))\r\n        if (i === n - 1) {\r\n          cps.push(0xFFFD);\r\n        } else {\r\n          const d = content.charCodeAt(i + 1);\r\n          if (this.inRange(d, 0xDC00, 0xDFFF)) {\r\n            const a = c & 0x3FF;\r\n            const b = d & 0x3FF;\r\n            i += 1;\r\n            cps.push(0x10000 + (a << 10) + b);\r\n          } else {\r\n            cps.push(0xFFFD);\r\n          }\r\n        }\r\n      }\r\n      i += 1;\r\n    }\r\n    return cps;\r\n  }\r\n}\r\n"]}