{"version":3,"sources":["NetController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\common\\net","sourcesContent":["import { SOCKET_CLOSE, SOCKET_CONNECT, SOCKET_DATA, SOCKET_IO_ERROR } from \"./socket/SocketDefine\";\r\nimport { ByteArray } from \"./NetByteArray\";\r\nimport * as ProtoReflect from \"./proto/ProtoReflect\";\r\nimport * as ProtoCrypto from \"./proto/ProtoCrypto\";\r\nimport GameWebSocket from \"./socket/GameWebSocket\";\r\nimport IEventDispatcher from \"../event/IEventDispatcher\";\r\nimport { DispatcherList, fillDispatcher } from \"./proto/ProtoDispatcher\";\r\nimport GamePersist from \"../persist/GamePersist\";\r\nimport { IProtoMsgC2S } from \"./proto/ProtoDefine\";\r\nimport AccManager from \"../../component/page/login/AccManager\";\r\nimport * as Misc from \"../Misc\";\r\nimport RuntimeManager from \"../runtime/RuntimeManager\";\r\nimport { OpenHomeFrom } from \"../Defines\";\r\n\r\nexport default class NetController implements IEventDispatcher {\r\n  private static singleInstance: NetController;\r\n\r\n  public isLoadingPreload: boolean = false;\r\n\r\n\r\n  private socket: GameWebSocket;\r\n  private protoBuffer: ByteArray;\r\n  private coreNode: cc.Node;\r\n\r\n  private host: string;\r\n  private port: number;\r\n  private path: string;\r\n  private isSecurity: boolean;\r\n\r\n  private connectFailedTimes: number = 0;\r\n  private connectedSuccess: boolean = false;\r\n\r\n  public static get INSTANCE() {\r\n    if (!this.singleInstance) {\r\n      this.singleInstance = new NetController();\r\n    }\r\n    return NetController.singleInstance;\r\n  }\r\n\r\n  constructor() {\r\n    this.coreNode = new cc.Node(\"node-netcontroller\");\r\n    GamePersist.RootNodeNet.addChild(this.coreNode);\r\n\r\n    this.protoBuffer = new ByteArray();\r\n    this.socket = new GameWebSocket();\r\n    this.coreNode.addChild(this.socket.node);\r\n    this.socket.type = GameWebSocket.TYPE_BINARY;\r\n    this.socket.on(SOCKET_DATA, this.onSocketData, this);\r\n    this.socket.on(SOCKET_CONNECT, this.onSocketOpen, this);\r\n    this.socket.on(SOCKET_CLOSE, this.onSocketClose, this);\r\n    this.socket.on(SOCKET_IO_ERROR, this.onSocketError, this);\r\n  }\r\n\r\n  public get Connected(): boolean {\r\n    return this.socket.connected;\r\n  }\r\n\r\n  public emit(message: string, detail?: any) {\r\n    this.node.emit(message, detail);\r\n  }\r\n\r\n  public on(type: string, callback: (data) => void, target?: any, useCapture?: boolean): void {\r\n    this.coreNode.on(type, callback, target, useCapture);\r\n  }\r\n\r\n  public off(type: string, callback: Function, target?: any, useCapture?: boolean): void {\r\n    this.coreNode.off(type, callback, target, useCapture);\r\n  }\r\n\r\n  public get node(): cc.Node {\r\n    return this.coreNode;\r\n  }\r\n\r\n  public reConnect(host: string, port: number, path?: string, isSecurity?: boolean): void {\r\n    this.protoBuffer = null;\r\n    this.socket.node.destroy();\r\n    this.socket = null;\r\n\r\n    this.protoBuffer = new ByteArray();\r\n    this.socket = new GameWebSocket();\r\n    this.coreNode.addChild(this.socket.node);\r\n    this.socket.type = GameWebSocket.TYPE_BINARY;\r\n    this.socket.on(SOCKET_DATA, this.onSocketData, this);\r\n    this.socket.on(SOCKET_CONNECT, this.onSocketOpen, this);\r\n    this.socket.on(SOCKET_CLOSE, this.onSocketClose, this);\r\n    this.socket.on(SOCKET_IO_ERROR, this.onSocketError, this);\r\n\r\n    this.connect(host, port, path, isSecurity);\r\n  }\r\n\r\n  // 连接服务器 可以同时制定paht和是否使用安全套接字\r\n  public connect(host: string, port: number, path?: string, isSecurity?: boolean): void {\r\n    this.host = host;\r\n    this.port = port;\r\n    this.path = path;\r\n    this.isSecurity = isSecurity;\r\n    this.connectedSuccess = false;\r\n    this.doConnect();\r\n  }\r\n\r\n  // 发送c2s协议\r\n  public send(msg: IProtoMsgC2S) {\r\n    this.socket.writeBytes(msg.encode());\r\n  }\r\n\r\n  public onSocketOpen(): void {\r\n    this.connectedSuccess = true;\r\n    this.connectFailedTimes = 0;\r\n    this.socket.on(SOCKET_CLOSE, this.onSocketClose, this);\r\n    const event: cc.Event.EventCustom = new cc.Event.EventCustom(SOCKET_CONNECT, false);\r\n    this.coreNode.emit(SOCKET_CONNECT, event);\r\n  }\r\n\r\n  public onSocketClose(): void {\r\n    if (!this.connectedSuccess) {\r\n      this.connectFailedTimes++;\r\n      if (this.connectFailedTimes > 5) {\r\n        Misc.goToPreload();\r\n        this.isLoadingPreload = true;\r\n      } else {\r\n        if (!this.host) {\r\n          Misc.goToPreload();\r\n          return;\r\n        }\r\n        this.doConnect();\r\n      }\r\n      return;\r\n    }\r\n\r\n\r\n    // 在后台的时候不进行处理\r\n    if (RuntimeManager.INSTANCE.IsBackground) {\r\n      return;\r\n    }\r\n    // 当前已经在进行重加载中\r\n    if (this.isLoadingPreload) {\r\n      return;\r\n    }\r\n\r\n    const rootUI = GamePersist.INSTANCE.RootUI;\r\n    if (!rootUI) {\r\n      Misc.goToPreload();\r\n      this.isLoadingPreload = true;\r\n      return;\r\n    }\r\n\r\n    // 当前在大厅界面\r\n    if (rootUI.uiName() === \"HomeUI\") {\r\n      // 如果已经尝试过重新登录 则直接从头开始\r\n      if (AccManager.INSTANCE.RetryTimes > 0) {\r\n        this.isLoadingPreload = true;\r\n        Misc.goToPreload();\r\n        return;\r\n      }\r\n      AccManager.INSTANCE.reConnectServer();\r\n      return;\r\n    }\r\n\r\n    // 当前在房间比赛\r\n    if (rootUI.uiName() === \"PlayUI\") {\r\n      Misc.goToHome(OpenHomeFrom.UI_PLAY);\r\n      return;\r\n    }\r\n\r\n    // 当前在登陆界面\r\n    if (rootUI.uiName() === \"LoginUI\") {\r\n      return;\r\n    }\r\n\r\n    Misc.goToPreload();\r\n    this.isLoadingPreload = true;\r\n  }\r\n\r\n  public onSocketError(): void {\r\n  }\r\n\r\n  public onSocketData(): void {\r\n    // TODO 应该让内存循环使用\r\n    // 放置占用一块过大的内存 如果当前始终缓存数据都已经处理 并且超过阈值就先释放\r\n    const bufferLen: number = this.protoBuffer.length;\r\n    if (bufferLen === this.protoBuffer.position && bufferLen >= 1024) {\r\n      this.protoBuffer.clear();\r\n    }\r\n    this.socket.readBytes(this.protoBuffer, this.protoBuffer.length);\r\n    this.parseProto();\r\n  }\r\n\r\n\r\n  public doConnect() {\r\n    const schema = this.isSecurity ? \"wss://\" : \"ws://\";\r\n    let serverUrl = schema + this.host + \":\" + this.port;\r\n    if (this.path) {\r\n      serverUrl += (\"/\" + this.path);\r\n    }\r\n    this.socket.connectByUrl(serverUrl);\r\n  }\r\n\r\n  // 解析协议\r\n  private parseProto(): void {\r\n    while (this.protoBuffer.length !== this.protoBuffer.position) {\r\n      const protoMsgLen = this.protoBuffer.readUnsignedShort();\r\n      if (protoMsgLen > this.protoBuffer.bytesAvailable) {\r\n        // 数据包尚未接收完整 把位置回退\r\n        this.protoBuffer.position = this.protoBuffer.position - 2;\r\n        break;\r\n      }\r\n\r\n      // 根据长度将协议数据包读入\r\n      let bytes: ByteArray = new ByteArray();\r\n      this.protoBuffer.readBytes(bytes, 0, protoMsgLen);\r\n\r\n      // 读取index, 如果非0表示消息已经加密\r\n      const index = bytes.readUnsignedByte();\r\n      if (index) {\r\n        bytes = ProtoCrypto.decode(index, bytes);\r\n      }\r\n\r\n      // 确定协议Id和解析类 进行协议的解析\r\n      const protoMsgSecId = bytes.readUnsignedByte();\r\n      const protoMsgSubId = bytes.readUnsignedByte();\r\n      const protoMsgId = (protoMsgSecId << 8) + protoMsgSubId;\r\n      const protoClazz = ProtoReflect.ProtoMsgMap[protoMsgId];\r\n      if (protoClazz && protoClazz.decode && protoClazz.EVENT_NAME) {\r\n        const protoMsg = protoClazz.decode(bytes);\r\n        protoMsg.MSG_ID = protoMsgId;\r\n        const protoMsgEventName: string = protoClazz.EVENT_NAME;\r\n        const protoMsgDispatcher: IEventDispatcher = DispatcherList[protoMsgSecId];\r\n        if (protoMsgEventName !== \"AccServertimeS2C\") {\r\n          // //console.log(\"协议返回--%s\", protoMsgEventName);\r\n        }\r\n        // console.log(protoMsg);\r\n        protoMsgDispatcher.emit(protoMsgEventName, protoMsg);\r\n      } else {\r\n        // console.error(\"unknonw msg id: \", protoMsgId);\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}