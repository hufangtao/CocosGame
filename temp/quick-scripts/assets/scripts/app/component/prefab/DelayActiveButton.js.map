{"version":3,"sources":["DelayActiveButton.ts"],"names":[],"mappings":";;;;;AAEM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAA+C,qCAAY;IAD3D;QAAA,qEA+CC;QA3CU,eAAS,GAAc,IAAI,CAAC;QAG5B,UAAI,GAAW,CAAC,CAAC;QAGjB,cAAQ,GAAa,IAAI,CAAC;QAE1B,kBAAY,GAAW,QAAQ,CAAC;QAE/B,WAAK,GAAW,CAAC,CAAC;;IAiC9B,CAAC;IAhCG,wBAAwB;IAEjB,kCAAM,GAAb;QACE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;IACtC,CAAC;IAEM,iCAAK,GAAZ;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAE/C,CAAC;IACM,qCAAS,GAAhB;QACE,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;IACrC,CAAC;IAEM,kCAAM,GAAb,UAAc,EAAE;QACd,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IACM,gCAAI,GAAX,UAAY,CAAS;QACnB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;SAC7C;QACD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACjE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC/D;QACD,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;SAC1C;IACH,CAAC;IAxCD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;wDACe;IAGnC;QADC,QAAQ,EAAE;mDACa;IAGxB;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;uDACc;IAThB,iBAAiB;QADrC,OAAO;OACa,iBAAiB,CA8CrC;IAAD,wBAAC;CA9CD,AA8CC,CA9C8C,EAAE,CAAC,SAAS,GA8C1D;kBA9CoB,iBAAiB","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\app\\component\\prefab","sourcesContent":["\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DelayActiveButton extends cc.Component {\r\n\r\n    @property(cc.Button)\r\n    public theButton: cc.Button = null;\r\n\r\n    @property()\r\n    public time: number = 0;\r\n\r\n    @property(cc.Label)\r\n    public btnLable: cc.Label = null;\r\n\r\n    public btnLabelShow: string = \"button\";\r\n\r\n    private timer: number = 0;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    public onLoad() {\r\n      this.timer = 0;\r\n      this.theButton.interactable = false;\r\n    }\r\n\r\n    public start() {\r\n      this.scheduleOnce(this.testTimer, this.time);\r\n\r\n    }\r\n    public testTimer() {\r\n      this.theButton.interactable = true;\r\n    }\r\n\r\n    public update(dt) {\r\n      this.timer += dt;\r\n      this.test(this.timer);\r\n    }\r\n    public test(t: number) {\r\n      if (this.timer < 1) {\r\n        this.btnLable.string = this.time.toString();\r\n      }\r\n      if (this.timer >= Math.floor(t) && this.timer < Math.floor(t) + 1) {\r\n        this.btnLable.string = (this.time - Math.floor(t)).toString();\r\n      }\r\n      if (this.timer > this.time) {\r\n        this.btnLable.string = this.btnLabelShow;\r\n      }\r\n    }\r\n\r\n\r\n}\r\n"]}